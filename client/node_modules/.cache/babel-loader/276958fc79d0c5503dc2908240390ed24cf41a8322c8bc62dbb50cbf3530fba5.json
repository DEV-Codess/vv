{"ast":null,"code":"import _objectSpread from \"D:/VYAVACH/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"D:\\\\VYAVACH\\\\client\\\\src\\\\components\\\\CategoryMaster.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { FaPencilAlt, FaTrash } from \"react-icons/fa\";\nimport categoryService from \"../services/categoryService\";\nimport \"../styles/CategoryMaster.css\"; // Ensure the path is correct\n\n/**\r\n * Recursively build a nested tree from the flat list of categories.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction buildTree(categories) {\n  let parentId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return categories.filter(cat => String(cat.parentCategory) === String(parentId)).map(cat => _objectSpread(_objectSpread({}, cat), {}, {\n    children: buildTree(categories, cat._id)\n  }));\n}\nconst CategoryMaster = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [isPopupOpen, setPopupOpen] = useState(false);\n\n  // Form fields\n  const [formData, setFormData] = useState({\n    _id: null,\n    productName: \"\",\n    alias: \"\",\n    parentCategory: \"\"\n  });\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  // Fetch categories from the backend\n  const fetchCategories = async () => {\n    try {\n      const data = await categoryService.getCategories();\n      setCategories(data);\n    } catch (error) {\n      console.error(\"Error fetching categories:\", error);\n    }\n  };\n\n  // Open the modal for adding a new category\n  const handleAddNew = () => {\n    setFormData({\n      _id: null,\n      productName: \"\",\n      alias: \"\",\n      parentCategory: \"\"\n    });\n    setPopupOpen(true);\n  };\n\n  // Open the modal for editing an existing category\n  const handleEdit = category => {\n    setFormData({\n      _id: category._id,\n      productName: category.productName,\n      alias: category.alias || \"\",\n      parentCategory: category.parentCategory || \"\"\n    });\n    setPopupOpen(true);\n  };\n\n  // Delete a category\n  const handleDelete = async id => {\n    if (!window.confirm(\"Are you sure you want to delete this category?\")) return;\n    try {\n      await categoryService.deleteCategory(id);\n      fetchCategories();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error deleting category\");\n    }\n  };\n\n  // Handle form field changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [name]: value\n    }));\n  };\n\n  // Submit the form (create or update)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      productName: formData.productName,\n      alias: formData.alias,\n      parentCategory: formData.parentCategory === \"\" ? null : formData.parentCategory\n    };\n    try {\n      if (formData._id) {\n        // Update existing category\n        await categoryService.updateCategory(formData._id, payload);\n      } else {\n        // Add new category\n        await categoryService.addCategory(payload);\n      }\n      setPopupOpen(false);\n      fetchCategories();\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Error submitting form\");\n    }\n  };\n\n  // Build the nested tree of categories\n  const treeData = buildTree(categories);\n\n  /**\r\n   * Recursively render <tr> rows for each node in the tree.\r\n   * @param {Array} data - Array of category nodes (with .children).\r\n   * @param {number} level - Depth in the tree (for indentation).\r\n   * @returns {Array<JSX.Element>} An array of <tr> elements.\r\n   */\n  const renderRows = function (data) {\n    let level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return data.flatMap(node => {\n      // Indentation: 4 dashes per level, plus a leading '+' or '>'\n      const indentSpaces = \"--\".repeat(level * 4) + (level === 0 ? \"+\" : \">\");\n      const displayName = indentSpaces + node.productName + (node.alias ? \" (\".concat(node.alias, \")\") : \"\");\n      return [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            textAlign: \"left\",\n            whiteSpace: \"pre\"\n          },\n          children: displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cat-edit-btn\",\n            onClick: () => handleEdit(node),\n            children: /*#__PURE__*/_jsxDEV(FaPencilAlt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cat-delete-btn\",\n            onClick: () => handleDelete(node._id),\n            children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, _this)]\n      }, node._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, _this),\n      // Recursively render the child rows\n      ...renderRows(node.children, level + 1)];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cat-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"cat-heading\",\n          children: \"Category Master\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cat-add-btn\",\n          onClick: handleAddNew,\n          children: \"+ Add Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cat-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"cat-tree-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"colgroup\", {\n            children: [/*#__PURE__*/_jsxDEV(\"col\", {\n              style: {\n                width: \"60%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n              style: {\n                width: \"20%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n              style: {\n                width: \"20%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: renderRows(treeData)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cat-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cat-modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cat-close-btn\",\n            onClick: () => setPopupOpen(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: formData._id ? \"Edit Category\" : \"Add Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"cat-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"productName\",\n              value: formData.productName,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Alias:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"alias\",\n              value: formData.alias,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Under:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"parentCategory\",\n              value: formData.parentCategory || \"\",\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), categories.filter(cat => cat._id !== formData._id).map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: cat._id,\n                children: cat.productName\n              }, cat._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cat-form-submit\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"cat-save-btn\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryMaster, \"Qa5070IhW8pama8sHre5TzQXID0=\");\n_c = CategoryMaster;\nexport default CategoryMaster;\nvar _c;\n$RefreshReg$(_c, \"CategoryMaster\");","map":{"version":3,"names":["React","useState","useEffect","FaPencilAlt","FaTrash","categoryService","jsxDEV","_jsxDEV","buildTree","categories","parentId","arguments","length","undefined","filter","cat","String","parentCategory","map","_objectSpread","children","_id","CategoryMaster","_s","setCategories","isPopupOpen","setPopupOpen","formData","setFormData","productName","alias","fetchCategories","data","getCategories","error","console","handleAddNew","handleEdit","category","handleDelete","id","window","confirm","deleteCategory","_error$response","_error$response$data","alert","response","message","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","payload","updateCategory","addCategory","_error$response2","_error$response2$data","treeData","renderRows","level","flatMap","node","indentSpaces","repeat","displayName","concat","style","textAlign","whiteSpace","fileName","_jsxFileName","lineNumber","columnNumber","_this","className","onClick","width","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["D:/VYAVACH/client/src/components/CategoryMaster.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FaPencilAlt, FaTrash } from \"react-icons/fa\";\r\nimport categoryService from \"../services/categoryService\";\r\nimport \"../styles/CategoryMaster.css\"; // Ensure the path is correct\r\n\r\n/**\r\n * Recursively build a nested tree from the flat list of categories.\r\n */\r\nfunction buildTree(categories, parentId = null) {\r\n  return categories\r\n    .filter((cat) => String(cat.parentCategory) === String(parentId))\r\n    .map((cat) => ({\r\n      ...cat,\r\n      children: buildTree(categories, cat._id),\r\n    }));\r\n}\r\n\r\nconst CategoryMaster = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [isPopupOpen, setPopupOpen] = useState(false);\r\n\r\n  // Form fields\r\n  const [formData, setFormData] = useState({\r\n    _id: null,\r\n    productName: \"\",\r\n    alias: \"\",\r\n    parentCategory: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  // Fetch categories from the backend\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const data = await categoryService.getCategories();\r\n      setCategories(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching categories:\", error);\r\n    }\r\n  };\r\n\r\n  // Open the modal for adding a new category\r\n  const handleAddNew = () => {\r\n    setFormData({\r\n      _id: null,\r\n      productName: \"\",\r\n      alias: \"\",\r\n      parentCategory: \"\",\r\n    });\r\n    setPopupOpen(true);\r\n  };\r\n\r\n  // Open the modal for editing an existing category\r\n  const handleEdit = (category) => {\r\n    setFormData({\r\n      _id: category._id,\r\n      productName: category.productName,\r\n      alias: category.alias || \"\",\r\n      parentCategory: category.parentCategory || \"\",\r\n    });\r\n    setPopupOpen(true);\r\n  };\r\n\r\n  // Delete a category\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this category?\")) return;\r\n    try {\r\n      await categoryService.deleteCategory(id);\r\n      fetchCategories();\r\n    } catch (error) {\r\n      alert(error.response?.data?.message || \"Error deleting category\");\r\n    }\r\n  };\r\n\r\n  // Handle form field changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Submit the form (create or update)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      productName: formData.productName,\r\n      alias: formData.alias,\r\n      parentCategory: formData.parentCategory === \"\" ? null : formData.parentCategory,\r\n    };\r\n\r\n    try {\r\n      if (formData._id) {\r\n        // Update existing category\r\n        await categoryService.updateCategory(formData._id, payload);\r\n      } else {\r\n        // Add new category\r\n        await categoryService.addCategory(payload);\r\n      }\r\n      setPopupOpen(false);\r\n      fetchCategories();\r\n    } catch (error) {\r\n      alert(error.response?.data?.message || \"Error submitting form\");\r\n    }\r\n  };\r\n\r\n  // Build the nested tree of categories\r\n  const treeData = buildTree(categories);\r\n\r\n  /**\r\n   * Recursively render <tr> rows for each node in the tree.\r\n   * @param {Array} data - Array of category nodes (with .children).\r\n   * @param {number} level - Depth in the tree (for indentation).\r\n   * @returns {Array<JSX.Element>} An array of <tr> elements.\r\n   */\r\n  const renderRows = (data, level = 0) => {\r\n    return data.flatMap((node) => {\r\n      // Indentation: 4 dashes per level, plus a leading '+' or '>'\r\n      const indentSpaces = \"--\".repeat(level * 4) + (level === 0 ? `+` : \">\");\r\n      const displayName =\r\n        indentSpaces + node.productName + (node.alias ? ` (${node.alias})` : \"\");\r\n\r\n      return [\r\n        <tr key={node._id}>\r\n          <td style={{ textAlign: \"left\", whiteSpace: \"pre\" }}>{displayName}</td>\r\n          <td>\r\n            <button className=\"cat-edit-btn\" onClick={() => handleEdit(node)}>\r\n              <FaPencilAlt />\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button className=\"cat-delete-btn\" onClick={() => handleDelete(node._id)}>\r\n              <FaTrash />\r\n            </button>\r\n          </td>\r\n        </tr>,\r\n\r\n        // Recursively render the child rows\r\n        ...renderRows(node.children, level + 1),\r\n      ];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"cat-wrapper\">\r\n      <div className=\"cat-container\">\r\n        {/* Header row: Title + Add button */}\r\n        <div className=\"cat-header\">\r\n          <h2 className=\"cat-heading\">Category Master</h2>\r\n          <button className=\"cat-add-btn\" onClick={handleAddNew}>\r\n            + Add Category\r\n          </button>\r\n        </div>\r\n\r\n        {/* Scrollable table container */}\r\n        <div className=\"cat-table-container\">\r\n          <table className=\"cat-tree-table\">\r\n            <colgroup>\r\n              <col style={{ width: \"60%\" }} />\r\n              <col style={{ width: \"20%\" }} />\r\n              <col style={{ width: \"20%\" }} />\r\n            </colgroup>\r\n            <tbody>{renderRows(treeData)}</tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* Popup (Modal) */}\r\n        {isPopupOpen && (\r\n          <div className=\"cat-overlay\">\r\n            <div className=\"cat-modal\">\r\n              <button className=\"cat-close-btn\" onClick={() => setPopupOpen(false)}>\r\n                &times;\r\n              </button>\r\n              <h3>{formData._id ? \"Edit Category\" : \"Add Category\"}</h3>\r\n              <form onSubmit={handleSubmit} className=\"cat-form\">\r\n                <label>Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"productName\"\r\n                  value={formData.productName}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n\r\n                <label>Alias:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"alias\"\r\n                  value={formData.alias}\r\n                  onChange={handleChange}\r\n                />\r\n\r\n                <label>Under:</label>\r\n                <select\r\n                  name=\"parentCategory\"\r\n                  value={formData.parentCategory || \"\"}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">Primary</option>\r\n                  {categories\r\n                    .filter((cat) => cat._id !== formData._id)\r\n                    .map((cat) => (\r\n                      <option key={cat._id} value={cat._id}>\r\n                        {cat.productName}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n\r\n                <div className=\"cat-form-submit\">\r\n                  <button type=\"submit\" className=\"cat-save-btn\">\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryMaster;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}