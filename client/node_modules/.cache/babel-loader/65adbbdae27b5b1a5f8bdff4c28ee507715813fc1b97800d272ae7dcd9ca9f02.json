{"ast":null,"code":"import _objectSpread from \"D:/vv/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"D:\\\\vv\\\\client\\\\src\\\\components\\\\CenterForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { getCenters, addCenter, updateCenter, deleteCenter } from \"../services/centerService\";\n// import \"../styles/CenterMaster.css\";\n\n// const CenterMaster = () => {\n//   const [centers, setCenters] = useState([]);\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Form data for add/edit\n//   const [formData, setFormData] = useState({\n//     _id: null,\n//     code: \"\",\n//     name: \"\",\n//     address: \"\",\n//     phoneNumber: \"\"\n//   });\n\n//   useEffect(() => {\n//     fetchAllCenters();\n//   }, []);\n\n//   // Fetch existing centers from backend\n//   const fetchAllCenters = async () => {\n//     try {\n//       const data = await getCenters();\n//       setCenters(data);\n//     } catch (error) {\n//       console.error(\"Error fetching centers:\", error);\n//     }\n//   };\n\n//   // Open modal for adding a new center\n//   const handleAddNew = () => {\n//     setFormData({\n//       _id: null,\n//       code: \"\",\n//       name: \"\",\n//       address: \"\",\n//       phoneNumber: \"\"\n//     });\n//     setShowModal(true);\n//   };\n\n//   // Open modal for editing an existing center\n//   const handleEdit = (center) => {\n//     setFormData({\n//       _id: center._id,\n//       code: center.code,\n//       name: center.name,\n//       address: center.address,\n//       phoneNumber: center.phoneNumber\n//     });\n//     setShowModal(true);\n//   };\n\n//   // Delete a center\n//   const handleDelete = async (id) => {\n//     if (!window.confirm(\"Are you sure you want to delete this center?\")) return;\n//     try {\n//       await deleteCenter(id);\n//       fetchAllCenters();\n//     } catch (error) {\n//       console.error(\"Delete error:\", error);\n//       alert(error.response?.data?.message || \"Error deleting center\");\n//     }\n//   };\n\n//   // Handle form field changes\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   // Submit the form (add or update)\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Front-end check to avoid duplicates by code or name\n//     if (!formData._id) {\n//       // If adding a new center, check for duplicates\n//       const duplicate = centers.find(\n//         c =>\n//           c.code.trim().toLowerCase() === formData.code.trim().toLowerCase() ||\n//           c.name.trim().toLowerCase() === formData.name.trim().toLowerCase()\n//       );\n//       if (duplicate) {\n//         alert(\"A center with the same code or name already exists.\");\n//         return;\n//       }\n//     }\n\n//     const payload = {\n//       code: formData.code.trim(),\n//       name: formData.name.trim(),\n//       address: formData.address.trim(),\n//       phoneNumber: formData.phoneNumber.trim()\n//     };\n\n//     try {\n//       if (formData._id) {\n//         // Update existing center\n//         await updateCenter(formData._id, payload);\n//       } else {\n//         // Add new center\n//         await addCenter(payload);\n//       }\n//       fetchAllCenters();\n//       setShowModal(false);\n//     } catch (error) {\n//       console.error(\"Error saving center:\", error);\n//       alert(error.response?.data?.message || \"Failed to save center.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"cm-wrapper\">\n//       <div className=\"cm-container\">\n//         {/* Header row: Title + Add button */}\n//         <div className=\"cm-header\">\n//           <h2 className=\"cm-heading\">Add New Vayavach Centre</h2>\n//           <button className=\"cm-add-btn\" onClick={handleAddNew}>\n//             + Add Centre\n//           </button>\n//         </div>\n\n//         {/* Scrollable table container */}\n//         <div className=\"cm-table-container\">\n//           <table className=\"cm-table\">\n//             <thead>\n//               <tr>\n//                 <th>Code</th>\n//                 <th>Name</th>\n//                 <th>Address</th>\n//                 <th>Phone Number</th>\n//                 <th>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {centers.length === 0 ? (\n//                 <tr>\n//                   <td colSpan=\"5\">No centers available.</td>\n//                 </tr>\n//               ) : (\n//                 centers.map(center => (\n//                   <tr key={center._id}>\n//                     <td>{center.code}</td>\n//                     <td>{center.name}</td>\n//                     <td>{center.address}</td>\n//                     <td>{center.phoneNumber}</td>\n//                     <td>\n//                       <button className=\"cm-edit-btn\" onClick={() => handleEdit(center)}>\n//                         Edit\n//                       </button>\n//                       <button className=\"cm-delete-btn\" onClick={() => handleDelete(center._id)}>\n//                         Delete\n//                       </button>\n//                     </td>\n//                   </tr>\n//                 ))\n//               )}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n\n//       {/* Modal for Add/Edit */}\n//       {showModal && (\n//         <div className=\"cm-overlay\">\n//           <div className=\"cm-modal\">\n//             <button className=\"cm-close-btn\" onClick={() => setShowModal(false)}>\n//               &times;\n//             </button>\n//             <h3>{formData._id ? \"Edit Centre\" : \"Add Centre\"}</h3>\n\n//             <form onSubmit={handleSubmit} className=\"cm-form\">\n//               <label>Code:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"code\"\n//                 value={formData.code}\n//                 onChange={handleChange}\n//                 required\n//               />\n\n//               <label>Name:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"name\"\n//                 value={formData.name}\n//                 onChange={handleChange}\n//                 required\n//               />\n\n//               <label>Address:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"address\"\n//                 value={formData.address}\n//                 onChange={handleChange}\n//                 required\n//               />\n\n//               <label>Phone Number:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"phoneNumber\"\n//                 value={formData.phoneNumber}\n//                 onChange={handleChange}\n//                 required\n//               />\n\n//               <div className=\"cm-form-submit\">\n//                 <button type=\"submit\" className=\"cm-save-btn\">\n//                   Save\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CenterMaster;\nimport React, { useState, useEffect } from \"react\";\nimport { getCenters, addCenter, updateCenter, deleteCenter } from \"../services/centerService\";\nimport \"../styles/CenterMaster.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CenterMaster = () => {\n  _s();\n  const [centers, setCenters] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n\n  // Form data for add/edit; note code field has been removed.\n  const [formData, setFormData] = useState({\n    _id: null,\n    name: \"\",\n    address: \"\",\n    phoneNumber: \"\"\n  });\n  useEffect(() => {\n    fetchAllCenters();\n  }, []);\n\n  // Fetch existing centers from backend\n  const fetchAllCenters = async () => {\n    try {\n      const data = await getCenters();\n      setCenters(data);\n    } catch (error) {\n      console.error(\"Error fetching centers:\", error);\n    }\n  };\n\n  // Open modal for adding a new center\n  const handleAddNew = () => {\n    setFormData({\n      _id: null,\n      name: \"\",\n      address: \"\",\n      phoneNumber: \"\"\n    });\n    setShowModal(true);\n  };\n\n  // Open modal for editing an existing center\n  const handleEdit = center => {\n    setFormData({\n      _id: center._id,\n      name: center.name,\n      address: center.address,\n      phoneNumber: center.phoneNumber\n    });\n    setShowModal(true);\n  };\n\n  // Delete a center\n  const handleDelete = async id => {\n    if (!window.confirm(\"Are you sure you want to delete this center?\")) return;\n    try {\n      await deleteCenter(id);\n      fetchAllCenters();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Delete error:\", error);\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error deleting center\");\n    }\n  };\n\n  // Handle form field changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [name]: value\n    }));\n  };\n\n  // Submit the form (add or update)\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Front-end duplicate check using name (since code is now auto-generated)\n    if (!formData._id) {\n      const duplicate = centers.find(c => c.name.trim().toLowerCase() === formData.name.trim().toLowerCase());\n      if (duplicate) {\n        alert(\"A center with the same name already exists.\");\n        return;\n      }\n    }\n    const payload = {\n      // Code is omitted so the backend can auto-generate it.\n      name: formData.name.trim(),\n      address: formData.address.trim(),\n      phoneNumber: formData.phoneNumber.trim()\n    };\n    try {\n      if (formData._id) {\n        // Update existing center\n        await updateCenter(formData._id, payload);\n      } else {\n        // Add new center\n        await addCenter(payload);\n      }\n      fetchAllCenters();\n      setShowModal(false);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Error saving center:\", error);\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Failed to save center.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cm-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cm-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cm-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"cm-heading\",\n          children: \"Add New Vayavach Centre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cm-add-btn\",\n          onClick: handleAddNew,\n          children: \"+ Add Centre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cm-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"cm-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Phone Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: centers.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"4\",\n                children: \"No centers available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this) : centers.map(center => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: center.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: center.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: center.phoneNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cm-edit-btn\",\n                  onClick: () => handleEdit(center),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cm-delete-btn\",\n                  onClick: () => handleDelete(center._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 21\n              }, this)]\n            }, center._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cm-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cm-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cm-close-btn\",\n          onClick: () => setShowModal(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: formData._id ? \"Edit Centre\" : \"Add Centre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"cm-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: formData.name,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"address\",\n            value: formData.address,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phoneNumber\",\n            value: formData.phoneNumber,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cm-form-submit\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"cm-save-btn\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, this);\n};\n_s(CenterMaster, \"mrPZmy+CCqZIu8pkjvlDFiJReCc=\");\n_c = CenterMaster;\nexport default CenterMaster;\nvar _c;\n$RefreshReg$(_c, \"CenterMaster\");","map":{"version":3,"names":["React","useState","useEffect","getCenters","addCenter","updateCenter","deleteCenter","jsxDEV","_jsxDEV","CenterMaster","_s","centers","setCenters","showModal","setShowModal","formData","setFormData","_id","name","address","phoneNumber","fetchAllCenters","data","error","console","handleAddNew","handleEdit","center","handleDelete","id","window","confirm","_error$response","_error$response$data","alert","response","message","handleChange","e","value","target","prev","_objectSpread","handleSubmit","preventDefault","duplicate","find","c","trim","toLowerCase","payload","_error$response2","_error$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","colSpan","map","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["D:/vv/client/src/components/CenterForm.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { getCenters, addCenter, updateCenter, deleteCenter } from \"../services/centerService\";\r\n// import \"../styles/CenterMaster.css\";\r\n\r\n// const CenterMaster = () => {\r\n//   const [centers, setCenters] = useState([]);\r\n//   const [showModal, setShowModal] = useState(false);\r\n\r\n//   // Form data for add/edit\r\n//   const [formData, setFormData] = useState({\r\n//     _id: null,\r\n//     code: \"\",\r\n//     name: \"\",\r\n//     address: \"\",\r\n//     phoneNumber: \"\"\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetchAllCenters();\r\n//   }, []);\r\n\r\n//   // Fetch existing centers from backend\r\n//   const fetchAllCenters = async () => {\r\n//     try {\r\n//       const data = await getCenters();\r\n//       setCenters(data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching centers:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Open modal for adding a new center\r\n//   const handleAddNew = () => {\r\n//     setFormData({\r\n//       _id: null,\r\n//       code: \"\",\r\n//       name: \"\",\r\n//       address: \"\",\r\n//       phoneNumber: \"\"\r\n//     });\r\n//     setShowModal(true);\r\n//   };\r\n\r\n//   // Open modal for editing an existing center\r\n//   const handleEdit = (center) => {\r\n//     setFormData({\r\n//       _id: center._id,\r\n//       code: center.code,\r\n//       name: center.name,\r\n//       address: center.address,\r\n//       phoneNumber: center.phoneNumber\r\n//     });\r\n//     setShowModal(true);\r\n//   };\r\n\r\n//   // Delete a center\r\n//   const handleDelete = async (id) => {\r\n//     if (!window.confirm(\"Are you sure you want to delete this center?\")) return;\r\n//     try {\r\n//       await deleteCenter(id);\r\n//       fetchAllCenters();\r\n//     } catch (error) {\r\n//       console.error(\"Delete error:\", error);\r\n//       alert(error.response?.data?.message || \"Error deleting center\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle form field changes\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData(prev => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   // Submit the form (add or update)\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Front-end check to avoid duplicates by code or name\r\n//     if (!formData._id) {\r\n//       // If adding a new center, check for duplicates\r\n//       const duplicate = centers.find(\r\n//         c =>\r\n//           c.code.trim().toLowerCase() === formData.code.trim().toLowerCase() ||\r\n//           c.name.trim().toLowerCase() === formData.name.trim().toLowerCase()\r\n//       );\r\n//       if (duplicate) {\r\n//         alert(\"A center with the same code or name already exists.\");\r\n//         return;\r\n//       }\r\n//     }\r\n\r\n//     const payload = {\r\n//       code: formData.code.trim(),\r\n//       name: formData.name.trim(),\r\n//       address: formData.address.trim(),\r\n//       phoneNumber: formData.phoneNumber.trim()\r\n//     };\r\n\r\n//     try {\r\n//       if (formData._id) {\r\n//         // Update existing center\r\n//         await updateCenter(formData._id, payload);\r\n//       } else {\r\n//         // Add new center\r\n//         await addCenter(payload);\r\n//       }\r\n//       fetchAllCenters();\r\n//       setShowModal(false);\r\n//     } catch (error) {\r\n//       console.error(\"Error saving center:\", error);\r\n//       alert(error.response?.data?.message || \"Failed to save center.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"cm-wrapper\">\r\n//       <div className=\"cm-container\">\r\n//         {/* Header row: Title + Add button */}\r\n//         <div className=\"cm-header\">\r\n//           <h2 className=\"cm-heading\">Add New Vayavach Centre</h2>\r\n//           <button className=\"cm-add-btn\" onClick={handleAddNew}>\r\n//             + Add Centre\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* Scrollable table container */}\r\n//         <div className=\"cm-table-container\">\r\n//           <table className=\"cm-table\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Code</th>\r\n//                 <th>Name</th>\r\n//                 <th>Address</th>\r\n//                 <th>Phone Number</th>\r\n//                 <th>Actions</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {centers.length === 0 ? (\r\n//                 <tr>\r\n//                   <td colSpan=\"5\">No centers available.</td>\r\n//                 </tr>\r\n//               ) : (\r\n//                 centers.map(center => (\r\n//                   <tr key={center._id}>\r\n//                     <td>{center.code}</td>\r\n//                     <td>{center.name}</td>\r\n//                     <td>{center.address}</td>\r\n//                     <td>{center.phoneNumber}</td>\r\n//                     <td>\r\n//                       <button className=\"cm-edit-btn\" onClick={() => handleEdit(center)}>\r\n//                         Edit\r\n//                       </button>\r\n//                       <button className=\"cm-delete-btn\" onClick={() => handleDelete(center._id)}>\r\n//                         Delete\r\n//                       </button>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))\r\n//               )}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Modal for Add/Edit */}\r\n//       {showModal && (\r\n//         <div className=\"cm-overlay\">\r\n//           <div className=\"cm-modal\">\r\n//             <button className=\"cm-close-btn\" onClick={() => setShowModal(false)}>\r\n//               &times;\r\n//             </button>\r\n//             <h3>{formData._id ? \"Edit Centre\" : \"Add Centre\"}</h3>\r\n\r\n//             <form onSubmit={handleSubmit} className=\"cm-form\">\r\n//               <label>Code:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"code\"\r\n//                 value={formData.code}\r\n//                 onChange={handleChange}\r\n//                 required\r\n//               />\r\n\r\n//               <label>Name:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"name\"\r\n//                 value={formData.name}\r\n//                 onChange={handleChange}\r\n//                 required\r\n//               />\r\n\r\n//               <label>Address:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"address\"\r\n//                 value={formData.address}\r\n//                 onChange={handleChange}\r\n//                 required\r\n//               />\r\n\r\n//               <label>Phone Number:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"phoneNumber\"\r\n//                 value={formData.phoneNumber}\r\n//                 onChange={handleChange}\r\n//                 required\r\n//               />\r\n\r\n//               <div className=\"cm-form-submit\">\r\n//                 <button type=\"submit\" className=\"cm-save-btn\">\r\n//                   Save\r\n//                 </button>\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CenterMaster;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { getCenters, addCenter, updateCenter, deleteCenter } from \"../services/centerService\";\r\nimport \"../styles/CenterMaster.css\";\r\n\r\nconst CenterMaster = () => {\r\n  const [centers, setCenters] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // Form data for add/edit; note code field has been removed.\r\n  const [formData, setFormData] = useState({\r\n    _id: null,\r\n    name: \"\",\r\n    address: \"\",\r\n    phoneNumber: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchAllCenters();\r\n  }, []);\r\n\r\n  // Fetch existing centers from backend\r\n  const fetchAllCenters = async () => {\r\n    try {\r\n      const data = await getCenters();\r\n      setCenters(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching centers:\", error);\r\n    }\r\n  };\r\n\r\n  // Open modal for adding a new center\r\n  const handleAddNew = () => {\r\n    setFormData({\r\n      _id: null,\r\n      name: \"\",\r\n      address: \"\",\r\n      phoneNumber: \"\"\r\n    });\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Open modal for editing an existing center\r\n  const handleEdit = (center) => {\r\n    setFormData({\r\n      _id: center._id,\r\n      name: center.name,\r\n      address: center.address,\r\n      phoneNumber: center.phoneNumber\r\n    });\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Delete a center\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this center?\")) return;\r\n    try {\r\n      await deleteCenter(id);\r\n      fetchAllCenters();\r\n    } catch (error) {\r\n      console.error(\"Delete error:\", error);\r\n      alert(error.response?.data?.message || \"Error deleting center\");\r\n    }\r\n  };\r\n\r\n  // Handle form field changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Submit the form (add or update)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Front-end duplicate check using name (since code is now auto-generated)\r\n    if (!formData._id) {\r\n      const duplicate = centers.find(\r\n        c => c.name.trim().toLowerCase() === formData.name.trim().toLowerCase()\r\n      );\r\n      if (duplicate) {\r\n        alert(\"A center with the same name already exists.\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    const payload = {\r\n      // Code is omitted so the backend can auto-generate it.\r\n      name: formData.name.trim(),\r\n      address: formData.address.trim(),\r\n      phoneNumber: formData.phoneNumber.trim()\r\n    };\r\n\r\n    try {\r\n      if (formData._id) {\r\n        // Update existing center\r\n        await updateCenter(formData._id, payload);\r\n      } else {\r\n        // Add new center\r\n        await addCenter(payload);\r\n      }\r\n      fetchAllCenters();\r\n      setShowModal(false);\r\n    } catch (error) {\r\n      console.error(\"Error saving center:\", error);\r\n      alert(error.response?.data?.message || \"Failed to save center.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cm-wrapper\">\r\n      <div className=\"cm-container\">\r\n        {/* Header row: Title + Add button */}\r\n        <div className=\"cm-header\">\r\n          <h2 className=\"cm-heading\">Add New Vayavach Centre</h2>\r\n          <button className=\"cm-add-btn\" onClick={handleAddNew}>\r\n            + Add Centre\r\n          </button>\r\n        </div>\r\n\r\n        {/* Scrollable table container */}\r\n        <div className=\"cm-table-container\">\r\n          <table className=\"cm-table\">\r\n            <thead>\r\n              <tr>\r\n                {/* Code column removed */}\r\n                <th>Name</th>\r\n                <th>Address</th>\r\n                <th>Phone Number</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {centers.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan=\"4\">No centers available.</td>\r\n                </tr>\r\n              ) : (\r\n                centers.map(center => (\r\n                  <tr key={center._id}>\r\n                    {/* Do not display auto-generated code */}\r\n                    <td>{center.name}</td>\r\n                    <td>{center.address}</td>\r\n                    <td>{center.phoneNumber}</td>\r\n                    <td>\r\n                      <button className=\"cm-edit-btn\" onClick={() => handleEdit(center)}>\r\n                        Edit\r\n                      </button>\r\n                      <button className=\"cm-delete-btn\" onClick={() => handleDelete(center._id)}>\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal for Add/Edit */}\r\n      {showModal && (\r\n        <div className=\"cm-overlay\">\r\n          <div className=\"cm-modal\">\r\n            <button className=\"cm-close-btn\" onClick={() => setShowModal(false)}>\r\n              &times;\r\n            </button>\r\n            <h3>{formData._id ? \"Edit Centre\" : \"Add Centre\"}</h3>\r\n\r\n            <form onSubmit={handleSubmit} className=\"cm-form\">\r\n              {/* Removed Code input */}\r\n\r\n              <label>Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n\r\n              <label>Address:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"address\"\r\n                value={formData.address}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n\r\n              <label>Phone Number:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"phoneNumber\"\r\n                value={formData.phoneNumber}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n\r\n              <div className=\"cm-form-submit\">\r\n                <button type=\"submit\" className=\"cm-save-btn\">\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CenterMaster;\r\n"],"mappings":";;;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,SAAS,EAAEC,YAAY,EAAEC,YAAY,QAAQ,2BAA2B;AAC7F,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC;IACvCgB,GAAG,EAAE,IAAI;IACTC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE;EACf,CAAC,CAAC;EAEFlB,SAAS,CAAC,MAAM;IACdmB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMnB,UAAU,CAAC,CAAC;MAC/BS,UAAU,CAACU,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;;EAED;EACA,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBT,WAAW,CAAC;MACVC,GAAG,EAAE,IAAI;MACTC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE;IACf,CAAC,CAAC;IACFN,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;;EAED;EACA,MAAMY,UAAU,GAAIC,MAAM,IAAK;IAC7BX,WAAW,CAAC;MACVC,GAAG,EAAEU,MAAM,CAACV,GAAG;MACfC,IAAI,EAAES,MAAM,CAACT,IAAI;MACjBC,OAAO,EAAEQ,MAAM,CAACR,OAAO;MACvBC,WAAW,EAAEO,MAAM,CAACP;IACtB,CAAC,CAAC;IACFN,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;;EAED;EACA,MAAMc,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,8CAA8C,CAAC,EAAE;IACrE,IAAI;MACF,MAAMzB,YAAY,CAACuB,EAAE,CAAC;MACtBR,eAAe,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;MAAA,IAAAS,eAAA,EAAAC,oBAAA;MACdT,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCW,KAAK,CAAC,EAAAF,eAAA,GAAAT,KAAK,CAACY,QAAQ,cAAAH,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBV,IAAI,cAAAW,oBAAA,uBAApBA,oBAAA,CAAsBG,OAAO,KAAI,uBAAuB,CAAC;IACjE;EACF,CAAC;;EAED;EACA,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEpB,IAAI;MAAEqB;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCxB,WAAW,CAACyB,IAAI,IAAAC,aAAA,CAAAA,aAAA,KAAUD,IAAI;MAAE,CAACvB,IAAI,GAAGqB;IAAK,EAAG,CAAC;EACnD,CAAC;;EAED;EACA,MAAMI,YAAY,GAAG,MAAOL,CAAC,IAAK;IAChCA,CAAC,CAACM,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAAC7B,QAAQ,CAACE,GAAG,EAAE;MACjB,MAAM4B,SAAS,GAAGlC,OAAO,CAACmC,IAAI,CAC5BC,CAAC,IAAIA,CAAC,CAAC7B,IAAI,CAAC8B,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,KAAKlC,QAAQ,CAACG,IAAI,CAAC8B,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CACxE,CAAC;MACD,IAAIJ,SAAS,EAAE;QACbX,KAAK,CAAC,6CAA6C,CAAC;QACpD;MACF;IACF;IAEA,MAAMgB,OAAO,GAAG;MACd;MACAhC,IAAI,EAAEH,QAAQ,CAACG,IAAI,CAAC8B,IAAI,CAAC,CAAC;MAC1B7B,OAAO,EAAEJ,QAAQ,CAACI,OAAO,CAAC6B,IAAI,CAAC,CAAC;MAChC5B,WAAW,EAAEL,QAAQ,CAACK,WAAW,CAAC4B,IAAI,CAAC;IACzC,CAAC;IAED,IAAI;MACF,IAAIjC,QAAQ,CAACE,GAAG,EAAE;QAChB;QACA,MAAMZ,YAAY,CAACU,QAAQ,CAACE,GAAG,EAAEiC,OAAO,CAAC;MAC3C,CAAC,MAAM;QACL;QACA,MAAM9C,SAAS,CAAC8C,OAAO,CAAC;MAC1B;MACA7B,eAAe,CAAC,CAAC;MACjBP,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOS,KAAK,EAAE;MAAA,IAAA4B,gBAAA,EAAAC,qBAAA;MACd5B,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CW,KAAK,CAAC,EAAAiB,gBAAA,GAAA5B,KAAK,CAACY,QAAQ,cAAAgB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB7B,IAAI,cAAA8B,qBAAA,uBAApBA,qBAAA,CAAsBhB,OAAO,KAAI,wBAAwB,CAAC;IAClE;EACF,CAAC;EAED,oBACE5B,OAAA;IAAK6C,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzB9C,OAAA;MAAK6C,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAE3B9C,OAAA;QAAK6C,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxB9C,OAAA;UAAI6C,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvDlD,OAAA;UAAQ6C,SAAS,EAAC,YAAY;UAACM,OAAO,EAAElC,YAAa;UAAA6B,QAAA,EAAC;QAEtD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGNlD,OAAA;QAAK6C,SAAS,EAAC,oBAAoB;QAAAC,QAAA,eACjC9C,OAAA;UAAO6C,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACzB9C,OAAA;YAAA8C,QAAA,eACE9C,OAAA;cAAA8C,QAAA,gBAEE9C,OAAA;gBAAA8C,QAAA,EAAI;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACblD,OAAA;gBAAA8C,QAAA,EAAI;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChBlD,OAAA;gBAAA8C,QAAA,EAAI;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrBlD,OAAA;gBAAA8C,QAAA,EAAI;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACd;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRlD,OAAA;YAAA8C,QAAA,EACG3C,OAAO,CAACiD,MAAM,KAAK,CAAC,gBACnBpD,OAAA;cAAA8C,QAAA,eACE9C,OAAA;gBAAIqD,OAAO,EAAC,GAAG;gBAAAP,QAAA,EAAC;cAAqB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC,GAEL/C,OAAO,CAACmD,GAAG,CAACnC,MAAM,iBAChBnB,OAAA;cAAA8C,QAAA,gBAEE9C,OAAA;gBAAA8C,QAAA,EAAK3B,MAAM,CAACT;cAAI;gBAAAqC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACtBlD,OAAA;gBAAA8C,QAAA,EAAK3B,MAAM,CAACR;cAAO;gBAAAoC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACzBlD,OAAA;gBAAA8C,QAAA,EAAK3B,MAAM,CAACP;cAAW;gBAAAmC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC7BlD,OAAA;gBAAA8C,QAAA,gBACE9C,OAAA;kBAAQ6C,SAAS,EAAC,aAAa;kBAACM,OAAO,EAAEA,CAAA,KAAMjC,UAAU,CAACC,MAAM,CAAE;kBAAA2B,QAAA,EAAC;gBAEnE;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACTlD,OAAA;kBAAQ6C,SAAS,EAAC,eAAe;kBAACM,OAAO,EAAEA,CAAA,KAAM/B,YAAY,CAACD,MAAM,CAACV,GAAG,CAAE;kBAAAqC,QAAA,EAAC;gBAE3E;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC;YAAA,GAZE/B,MAAM,CAACV,GAAG;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAaf,CACL;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGL7C,SAAS,iBACRL,OAAA;MAAK6C,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzB9C,OAAA;QAAK6C,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvB9C,OAAA;UAAQ6C,SAAS,EAAC,cAAc;UAACM,OAAO,EAAEA,CAAA,KAAM7C,YAAY,CAAC,KAAK,CAAE;UAAAwC,QAAA,EAAC;QAErE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTlD,OAAA;UAAA8C,QAAA,EAAKvC,QAAQ,CAACE,GAAG,GAAG,aAAa,GAAG;QAAY;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAEtDlD,OAAA;UAAMuD,QAAQ,EAAEpB,YAAa;UAACU,SAAS,EAAC,SAAS;UAAAC,QAAA,gBAG/C9C,OAAA;YAAA8C,QAAA,EAAO;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpBlD,OAAA;YACEwD,IAAI,EAAC,MAAM;YACX9C,IAAI,EAAC,MAAM;YACXqB,KAAK,EAAExB,QAAQ,CAACG,IAAK;YACrB+C,QAAQ,EAAE5B,YAAa;YACvB6B,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eAEFlD,OAAA;YAAA8C,QAAA,EAAO;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACvBlD,OAAA;YACEwD,IAAI,EAAC,MAAM;YACX9C,IAAI,EAAC,SAAS;YACdqB,KAAK,EAAExB,QAAQ,CAACI,OAAQ;YACxB8C,QAAQ,EAAE5B,YAAa;YACvB6B,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eAEFlD,OAAA;YAAA8C,QAAA,EAAO;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5BlD,OAAA;YACEwD,IAAI,EAAC,MAAM;YACX9C,IAAI,EAAC,aAAa;YAClBqB,KAAK,EAAExB,QAAQ,CAACK,WAAY;YAC5B6C,QAAQ,EAAE5B,YAAa;YACvB6B,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eAEFlD,OAAA;YAAK6C,SAAS,EAAC,gBAAgB;YAAAC,QAAA,eAC7B9C,OAAA;cAAQwD,IAAI,EAAC,QAAQ;cAACX,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAC;YAE9C;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChD,EAAA,CA7MID,YAAY;AAAA0D,EAAA,GAAZ1D,YAAY;AA+MlB,eAAeA,YAAY;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}