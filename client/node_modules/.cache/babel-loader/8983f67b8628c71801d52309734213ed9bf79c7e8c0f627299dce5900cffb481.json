{"ast":null,"code":"// client/src/services/centerservice.js\n\nimport axios from 'axios';\nconst API_URL = '/api/center-form'; // Ensure this matches the route mounted in your server.js\n\n// Function to add a new centre\nexport const addCenter = async centerData => {\n  try {\n    const response = await axios.post(API_URL, centerData);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    // Throw a message from the error response if available, else a default message.\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to add centre';\n  }\n};\n\n// Optionally, if you need a function to fetch all centres:\nexport const getCenters = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch centres';\n  }\n};","map":{"version":3,"names":["axios","API_URL","addCenter","centerData","response","post","data","error","_error$response","_error$response$data","message","getCenters","get","_error$response2","_error$response2$data"],"sources":["D:/VYAVACH/client/src/services/centerService.js"],"sourcesContent":["// client/src/services/centerservice.js\r\n\r\nimport axios from 'axios';\r\n\r\nconst API_URL = '/api/center-form'; // Ensure this matches the route mounted in your server.js\r\n\r\n// Function to add a new centre\r\nexport const addCenter = async (centerData) => {\r\n    try {\r\n        const response = await axios.post(API_URL, centerData);\r\n        return response.data;\r\n    } catch (error) {\r\n        // Throw a message from the error response if available, else a default message.\r\n        throw error.response?.data?.message || 'Failed to add centre';\r\n    }\r\n};\r\n\r\n// Optionally, if you need a function to fetch all centres:\r\nexport const getCenters = async () => {\r\n    try {\r\n        const response = await axios.get(API_URL);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data?.message || 'Failed to fetch centres';\r\n    }\r\n};\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kBAAkB,CAAC,CAAC;;AAEpC;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,UAAU,IAAK;EAC3C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAACJ,OAAO,EAAEE,UAAU,CAAC;IACtD,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACZ;IACA,MAAM,EAAAD,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAI,sBAAsB;EACjE;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACY,GAAG,CAACX,OAAO,CAAC;IACzC,OAAOG,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAM,gBAAA,EAAAC,qBAAA;IACZ,MAAM,EAAAD,gBAAA,GAAAN,KAAK,CAACH,QAAQ,cAAAS,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBP,IAAI,cAAAQ,qBAAA,uBAApBA,qBAAA,CAAsBJ,OAAO,KAAI,yBAAyB;EACpE;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}