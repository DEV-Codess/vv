{"ast":null,"code":"var _jsxFileName = \"D:\\\\VYAVACH\\\\client\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/Dashboard.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const role = localStorage.getItem(\"role\") || \"user\";\n  const permissions = role === 'user' ? JSON.parse(localStorage.getItem('permissions') || '[]') : [];\n\n  // Define all available tables (with routes)\n  const tableButtons = [{\n    label: 'Donor Master',\n    route: '/donor-master'\n  }, {\n    label: 'Maharaj Master',\n    route: '/maharaj-master'\n  }, {\n    label: 'Inventory Master',\n    route: '/inventory-master'\n  }, {\n    label: 'Category Master',\n    route: '/category-master'\n  }, {\n    label: 'Donation Center Master',\n    route: '/donation-center-master'\n  }, {\n    label: 'Donation Mode Master',\n    route: '/donation-mode-master'\n  }, {\n    label: 'Unit Master',\n    route: '/unit-master'\n  }];\n\n  // Determine which buttons to show\n  const displayedButtons = role === 'admin' ? tableButtons : tableButtons.filter(btn => permissions.includes(btn.label));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-title\",\n        children: \"Master Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-grid\",\n        children: [displayedButtons.map((btn, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dashboard-button\",\n          onClick: () => navigate(btn.route),\n          children: btn.label\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)), role === \"admin\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dashboard-button\",\n            onClick: () => navigate(\"/center-form\"),\n            children: \"Add Centre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dashboard-button\",\n            onClick: () => navigate(\"/register-user\"),\n            children: \"Register New User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","navigate","role","localStorage","getItem","permissions","JSON","parse","tableButtons","label","route","displayedButtons","filter","btn","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","onClick","_c","$RefreshReg$"],"sources":["D:/VYAVACH/client/src/components/Dashboard.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/Dashboard.css\";\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n  const role = localStorage.getItem(\"role\") || \"user\";\r\n  const permissions = role === 'user'\r\n    ? JSON.parse(localStorage.getItem('permissions') || '[]')\r\n    : [];\r\n\r\n  // Define all available tables (with routes)\r\n  const tableButtons = [\r\n    { label: 'Donor Master', route: '/donor-master' },\r\n    { label: 'Maharaj Master', route: '/maharaj-master' },\r\n    { label: 'Inventory Master', route: '/inventory-master' },\r\n    { label: 'Category Master', route: '/category-master' },\r\n    { label: 'Donation Center Master', route: '/donation-center-master' },\r\n    { label: 'Donation Mode Master', route: '/donation-mode-master' },\r\n    { label: 'Unit Master', route: '/unit-master' },\r\n  ];\r\n\r\n  // Determine which buttons to show\r\n  const displayedButtons = role === 'admin'\r\n    ? tableButtons\r\n    : tableButtons.filter(btn => permissions.includes(btn.label));\r\n\r\n  return (\r\n    <div className=\"dashboard-wrapper\">\r\n      <div className=\"dashboard-container\">\r\n        <h1 className=\"dashboard-title\">Master Dashboard</h1>\r\n        <div className=\"dashboard-grid\">\r\n          {displayedButtons.map((btn, idx) => (\r\n            <button\r\n              key={idx}\r\n              className=\"dashboard-button\"\r\n              onClick={() => navigate(btn.route)}\r\n            >\r\n              {btn.label}\r\n            </button>\r\n          ))}\r\n\r\n          {/* Admin-only extra buttons */}\r\n          {role === \"admin\" && (\r\n            <>\r\n              <button\r\n                className=\"dashboard-button\"\r\n                onClick={() => navigate(\"/center-form\")}\r\n              >\r\n                Add Centre\r\n              </button>\r\n              <button\r\n                className=\"dashboard-button\"\r\n                onClick={() => navigate(\"/register-user\")}\r\n              >\r\n                Register New User\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}