{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000/api/inventory\";\nexport const getInventory = async () => {\n  const response = await axios.get(API_URL);\n  return response.data;\n};\nexport const addInventory = async data => {\n  await axios.post(\"http://localhost:5000/api/inventory\", data, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n};\nexport const updateInventory = async (id, inventory) => {\n  const formData = new FormData();\n  formData.append(\"productName\", inventory.get(\"productName\"));\n  formData.append(\"region\", inventory.get(\"region\"));\n  formData.append(\"category\", inventory.get(\"category\"));\n  formData.append(\"unit\", inventory.get(\"unit\"));\n  formData.append(\"storageLocation\", inventory.get(\"storageLocation\"));\n  formData.append(\"minInventory\", parseInt(inventory.get(\"minInventory\"), 10));\n  formData.append(\"maxInventory\", parseInt(inventory.get(\"maxInventory\"), 10));\n  if (inventory.get(\"photo\")) {\n    formData.append(\"photo\", inventory.get(\"photo\")); // ✅ Only send if a new image is uploaded\n  }\n  await axios.put(\"http://localhost:5000/api/inventory/\".concat(id), formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n};\nexport const deleteInventory = async id => {\n  await axios.delete(\"\".concat(API_URL, \"/\").concat(id));\n};\nexport default {\n  getInventory,\n  addInventory,\n  updateInventory,\n  deleteInventory\n};","map":{"version":3,"names":["axios","API_URL","getInventory","response","get","data","addInventory","post","headers","updateInventory","id","inventory","formData","FormData","append","parseInt","put","concat","deleteInventory","delete"],"sources":["D:/VYAVACH/client/src/services/inventoryService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/api/inventory\";\r\n\r\nexport const getInventory = async () => {\r\n  const response = await axios.get(API_URL);\r\n  return response.data;\r\n};\r\n\r\nexport const addInventory = async (data) => {\r\n    await axios.post(\"http://localhost:5000/api/inventory\", data, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n  };\r\n  \r\n   \r\n\r\n  export const updateInventory = async (id, inventory) => {\r\n    const formData = new FormData();\r\n    formData.append(\"productName\", inventory.get(\"productName\"));\r\n    formData.append(\"region\", inventory.get(\"region\"));\r\n    formData.append(\"category\", inventory.get(\"category\"));\r\n    formData.append(\"unit\", inventory.get(\"unit\"));\r\n    formData.append(\"storageLocation\", inventory.get(\"storageLocation\"));\r\n    formData.append(\"minInventory\", parseInt(inventory.get(\"minInventory\"), 10));\r\n    formData.append(\"maxInventory\", parseInt(inventory.get(\"maxInventory\"), 10));\r\n  \r\n    if (inventory.get(\"photo\")) {\r\n      formData.append(\"photo\", inventory.get(\"photo\")); // ✅ Only send if a new image is uploaded\r\n    }\r\n  \r\n    await axios.put(`http://localhost:5000/api/inventory/${id}`, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n  };\r\n  \r\n  \r\n\r\nexport const deleteInventory = async (id) => {\r\n  await axios.delete(`${API_URL}/${id}`);\r\n};\r\n\r\nexport default { getInventory, addInventory, updateInventory, deleteInventory };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,qCAAqC;AAErD,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;EACzC,OAAOE,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAOD,IAAI,IAAK;EACxC,MAAML,KAAK,CAACO,IAAI,CAAC,qCAAqC,EAAEF,IAAI,EAAE;IAC5DG,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;AAID,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAOC,EAAE,EAAEC,SAAS,KAAK;EACtD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEH,SAAS,CAACP,GAAG,CAAC,aAAa,CAAC,CAAC;EAC5DQ,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEH,SAAS,CAACP,GAAG,CAAC,QAAQ,CAAC,CAAC;EAClDQ,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,SAAS,CAACP,GAAG,CAAC,UAAU,CAAC,CAAC;EACtDQ,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,SAAS,CAACP,GAAG,CAAC,MAAM,CAAC,CAAC;EAC9CQ,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAEH,SAAS,CAACP,GAAG,CAAC,iBAAiB,CAAC,CAAC;EACpEQ,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEC,QAAQ,CAACJ,SAAS,CAACP,GAAG,CAAC,cAAc,CAAC,EAAE,EAAE,CAAC,CAAC;EAC5EQ,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEC,QAAQ,CAACJ,SAAS,CAACP,GAAG,CAAC,cAAc,CAAC,EAAE,EAAE,CAAC,CAAC;EAE5E,IAAIO,SAAS,CAACP,GAAG,CAAC,OAAO,CAAC,EAAE;IAC1BQ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,SAAS,CAACP,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EACpD;EAEA,MAAMJ,KAAK,CAACgB,GAAG,wCAAAC,MAAA,CAAwCP,EAAE,GAAIE,QAAQ,EAAE;IACrEJ,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;AAIH,OAAO,MAAMU,eAAe,GAAG,MAAOR,EAAE,IAAK;EAC3C,MAAMV,KAAK,CAACmB,MAAM,IAAAF,MAAA,CAAIhB,OAAO,OAAAgB,MAAA,CAAIP,EAAE,CAAE,CAAC;AACxC,CAAC;AAED,eAAe;EAAER,YAAY;EAAEI,YAAY;EAAEG,eAAe;EAAES;AAAgB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}