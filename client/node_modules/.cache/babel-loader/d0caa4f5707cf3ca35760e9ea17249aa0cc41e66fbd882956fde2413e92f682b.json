{"ast":null,"code":"import _objectSpread from \"D:/VYAVACH/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"D:\\\\VYAVACH\\\\client\\\\src\\\\components\\\\CategoryMaster.js\",\n  _this = this,\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import categoryService from \"../services/categoryService\";\n// import \"../styles/MasterForms.css\";\n\n// // Helper function: Convert buffer to Base64 in chunks\n// const bufferToBase64 = (buffer) => {\n//   let binary = \"\";\n//   const bytes = new Uint8Array(buffer);\n//   const chunkSize = 0x8000; // Process in chunks of 32768 bytes\n//   for (let i = 0; i < bytes.length; i += chunkSize) {\n//     binary += String.fromCharCode(...bytes.subarray(i, i + chunkSize));\n//   }\n//   return window.btoa(binary);\n// };\n\n// const CategoryMaster = () => {\n//   const [categories, setCategories] = useState([]);\n//   const [formData, setFormData] = useState({});\n//   const [isPopupOpen, setPopupOpen] = useState(false);\n\n//   useEffect(() => {\n//     fetchCategories();\n//   }, []);\n\n//   const fetchCategories = async () => {\n//     const data = await categoryService.getCategories();\n//     console.log(\"Fetched Categories:\", data);\n//     setCategories(data);\n//   };\n\n//   const handleAddNew = () => {\n//     setFormData({\n//       primaryCategory: \"\",\n//       subCategory: \"\",\n//       productName: \"\",\n//       photo: null,\n//     });\n//     setPopupOpen(true);\n//   };\n\n//   const handleEdit = (category) => {\n//     setFormData({\n//       _id: category._id,\n//       primaryCategory: category.primaryCategory || \"\",\n//       subCategory: category.subCategory || \"\",\n//       productName: category.products?.[0]?.productName || \"\",\n//       photo: null, // Reset file input\n//       existingPhoto: category.products?.[0]?.photo\n//         ? `data:${category.products[0].photo.contentType};base64,${bufferToBase64(\n//             category.products[0].photo.data.data\n//           )}`\n//         : null,\n//     });\n//     setPopupOpen(true);\n//   };\n\n//   const handleDelete = async (id) => {\n//     await categoryService.deleteCategory(id);\n//     fetchCategories();\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value, files } = e.target;\n//     if (name === \"photo\" && files.length > 0) {\n//       setFormData({ ...formData, photo: files[0] });\n//     } else {\n//       setFormData({ ...formData, [name]: value });\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const formDataToSend = new FormData();\n//     formDataToSend.append(\"primaryCategory\", formData.primaryCategory);\n//     formDataToSend.append(\"subCategory\", formData.subCategory);\n//     formDataToSend.append(\"productName\", formData.productName);\n\n//     if (formData.photo) {\n//       formDataToSend.append(\"photo\", formData.photo);\n//     } else if (formData.existingPhoto) {\n//       formDataToSend.append(\"existingPhoto\", formData.existingPhoto);\n//     }\n\n//     try {\n//       if (formData._id) {\n//         await categoryService.updateCategory(formData._id, formDataToSend);\n//       } else {\n//         await categoryService.addCategory(formDataToSend);\n//       }\n//       setPopupOpen(false);\n//       fetchCategories();\n//     } catch (error) {\n//       console.error(\"Error while submitting the form:\", error.response?.data || error);\n//       alert(\"An error occurred while submitting the form.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"master-container\">\n//       <h2>Category Master</h2>\n//       <button className=\"add-btn\" onClick={handleAddNew}>\n//         + Add Category\n//       </button>\n\n//       <table className=\"category-table\">\n//         <thead>\n//           <tr>\n//             <th>Primary Category</th>\n//             <th>Sub Category</th>\n//             <th>Product Name</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {categories.map((item) => (\n//             <tr key={item._id}>\n//               <td>{item.primaryCategory || \"N/A\"}</td>\n//               <td>{item.subCategory || \"N/A\"}</td>\n//               <td>{item.products?.[0]?.productName || \"N/A\"}</td>\n//               <td>\n//                 {item.products?.[0]?.photo?.data && (\n//                   <img\n//                     src={`data:${item.products[0].photo.contentType};base64,${bufferToBase64(\n//                       item.products[0].photo.data.data\n//                     )}`}\n//                     alt=\"Product\"\n//                     style={{ width: \"100px\", height: \"100px\" }}\n//                   />\n//                 )}\n//                 <button className=\"edit-btn\" onClick={() => handleEdit(item)}>\n//                   Edit\n//                 </button>\n//                 <button className=\"delete-btn\" onClick={() => handleDelete(item._id)}>\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {isPopupOpen && (\n//         <div className=\"popup-overlay\">\n//           <div className=\"popup-container\">\n//             <button className=\"close-btn\" onClick={() => setPopupOpen(false)}>\n//               Ã—\n//             </button>\n//             <form onSubmit={handleSubmit}>\n//               <label>Primary Category:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"primaryCategory\"\n//                 value={formData.primaryCategory || \"\"}\n//                 onChange={handleChange}\n//                 required\n//               />\n\n//               <label>Sub Category:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"subCategory\"\n//                 value={formData.subCategory || \"\"}\n//                 onChange={handleChange}\n//                 required\n//               />\n\n//               <label>Product Name:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"productName\"\n//                 value={formData.productName || \"\"}\n//                 onChange={handleChange}\n//                 required\n//               />\n\n//               <label>Product Photo:</label>\n//               {formData.existingPhoto && (\n//                 <div>\n//                   <p>Current Image:</p>\n//                   <img\n//                     src={formData.existingPhoto}\n//                     alt=\"Existing Product\"\n//                     style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\n//                   />\n//                 </div>\n//               )}\n//               <input type=\"file\" name=\"photo\" onChange={handleChange} />\n\n//               <button className=\"submit-btn\" type=\"submit\">\n//                 Save\n//               </button>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CategoryMaster;\nimport React, { useState, useEffect } from \"react\";\nimport { FaEdit, FaTrash } from \"react-icons/fa\"; // Import the icons\nimport categoryService from \"../services/categoryService\";\nimport \"../styles/MasterForms.css\";\n\n/**\r\n * Recursively build a nested tree from the flat list of categories.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction buildTree(categories) {\n  let parentId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return categories.filter(cat => String(cat.parentCategory) === String(parentId)).map(cat => _objectSpread(_objectSpread({}, cat), {}, {\n    children: buildTree(categories, cat._id)\n  }));\n}\nconst CategoryMaster = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [isPopupOpen, setPopupOpen] = useState(false);\n\n  // Form fields\n  const [formData, setFormData] = useState({\n    _id: null,\n    productName: \"\",\n    alias: \"\",\n    parentCategory: \"\"\n  });\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  const fetchCategories = async () => {\n    const data = await categoryService.getCategories();\n    setCategories(data);\n  };\n  const handleAddNew = () => {\n    // Reset form\n    setFormData({\n      _id: null,\n      productName: \"\",\n      alias: \"\",\n      parentCategory: \"\"\n    });\n    setPopupOpen(true);\n  };\n  const handleEdit = category => {\n    setFormData({\n      _id: category._id,\n      productName: category.productName,\n      alias: category.alias || \"\",\n      parentCategory: category.parentCategory || \"\"\n    });\n    setPopupOpen(true);\n  };\n  const handleDelete = async id => {\n    try {\n      await categoryService.deleteCategory(id);\n      fetchCategories();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error deleting category\");\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      productName: formData.productName,\n      alias: formData.alias,\n      parentCategory: formData.parentCategory === \"\" ? null : formData.parentCategory\n    };\n    try {\n      if (formData._id) {\n        // Update existing\n        await categoryService.updateCategory(formData._id, payload);\n      } else {\n        // Add new\n        await categoryService.addCategory(payload);\n      }\n      setPopupOpen(false);\n      fetchCategories();\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Error submitting form\");\n    }\n  };\n\n  // Build the nested tree once from categories\n  const treeData = buildTree(categories);\n\n  /**\r\n   * Recursively render <tr> rows for each node in the tree.\r\n   * @param {Array} data - Array of category nodes (with .children).\r\n   * @param {number} level - Depth in the tree (for indentation).\r\n   * @returns {Array<JSX.Element>} An array of <tr> elements.\r\n   */\n  const renderRows = function (data) {\n    let level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return data.flatMap(node => {\n      // Generate indentation (4 spaces per level)\n      const indentSpaces = \"--\".repeat(level * 4) + (level == 0 ? \"+\" : \">\");\n      // Combine name + alias (if any)\n      const displayName = indentSpaces + node.productName + (node.alias ? \" (\".concat(node.alias, \")\") : \"\");\n      return [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            textAlign: \"left\",\n            whiteSpace: \"pre\"\n          },\n          children: displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-btn\",\n            onClick: () => handleEdit(node),\n            children: [/*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 13\n            }, _this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-btn\",\n            onClick: () => handleDelete(node._id),\n            children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 13\n            }, _this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, _this)]\n      }, node._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, _this),\n      // Recursively render the child rows\n      ...renderRows(node.children, level + 1)];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"master-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Category Master\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      onClick: handleAddNew,\n      children: \"+ Add Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"tree-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"colgroup\", {\n          children: [/*#__PURE__*/_jsxDEV(\"col\", {\n            style: {\n              width: \"40ch\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            style: {\n              width: \"20ch\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            style: {\n              width: \"20ch\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: renderRows(treeData)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => setPopupOpen(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"tally-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"productName\",\n            value: formData.productName,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"(alias):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"alias\",\n            value: formData.alias,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Under:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"parentCategory\",\n            value: formData.parentCategory || \"\",\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this), categories.filter(cat => cat._id !== formData._id).map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat._id,\n              children: cat.productName\n            }, cat._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryMaster, \"Qa5070IhW8pama8sHre5TzQXID0=\");\n_c = CategoryMaster;\nexport default CategoryMaster;\nvar _c;\n$RefreshReg$(_c, \"CategoryMaster\");","map":{"version":3,"names":["React","useState","useEffect","FaEdit","FaTrash","categoryService","jsxDEV","_jsxDEV","buildTree","categories","parentId","arguments","length","undefined","filter","cat","String","parentCategory","map","_objectSpread","children","_id","CategoryMaster","_s","setCategories","isPopupOpen","setPopupOpen","formData","setFormData","productName","alias","fetchCategories","data","getCategories","handleAddNew","handleEdit","category","handleDelete","id","deleteCategory","error","_error$response","_error$response$data","alert","response","message","handleChange","e","name","value","target","handleSubmit","preventDefault","payload","updateCategory","addCategory","_error$response2","_error$response2$data","treeData","renderRows","level","flatMap","node","indentSpaces","repeat","displayName","concat","style","textAlign","whiteSpace","fileName","_jsxFileName","lineNumber","columnNumber","_this","className","onClick","width","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["D:/VYAVACH/client/src/components/CategoryMaster.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import categoryService from \"../services/categoryService\";\r\n// import \"../styles/MasterForms.css\";\r\n\r\n// // Helper function: Convert buffer to Base64 in chunks\r\n// const bufferToBase64 = (buffer) => {\r\n//   let binary = \"\";\r\n//   const bytes = new Uint8Array(buffer);\r\n//   const chunkSize = 0x8000; // Process in chunks of 32768 bytes\r\n//   for (let i = 0; i < bytes.length; i += chunkSize) {\r\n//     binary += String.fromCharCode(...bytes.subarray(i, i + chunkSize));\r\n//   }\r\n//   return window.btoa(binary);\r\n// };\r\n\r\n// const CategoryMaster = () => {\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [formData, setFormData] = useState({});\r\n//   const [isPopupOpen, setPopupOpen] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     fetchCategories();\r\n//   }, []);\r\n\r\n//   const fetchCategories = async () => {\r\n//     const data = await categoryService.getCategories();\r\n//     console.log(\"Fetched Categories:\", data);\r\n//     setCategories(data);\r\n//   };\r\n\r\n//   const handleAddNew = () => {\r\n//     setFormData({\r\n//       primaryCategory: \"\",\r\n//       subCategory: \"\",\r\n//       productName: \"\",\r\n//       photo: null,\r\n//     });\r\n//     setPopupOpen(true);\r\n//   };\r\n\r\n//   const handleEdit = (category) => {\r\n//     setFormData({\r\n//       _id: category._id,\r\n//       primaryCategory: category.primaryCategory || \"\",\r\n//       subCategory: category.subCategory || \"\",\r\n//       productName: category.products?.[0]?.productName || \"\",\r\n//       photo: null, // Reset file input\r\n//       existingPhoto: category.products?.[0]?.photo\r\n//         ? `data:${category.products[0].photo.contentType};base64,${bufferToBase64(\r\n//             category.products[0].photo.data.data\r\n//           )}`\r\n//         : null,\r\n//     });\r\n//     setPopupOpen(true);\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     await categoryService.deleteCategory(id);\r\n//     fetchCategories();\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value, files } = e.target;\r\n//     if (name === \"photo\" && files.length > 0) {\r\n//       setFormData({ ...formData, photo: files[0] });\r\n//     } else {\r\n//       setFormData({ ...formData, [name]: value });\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const formDataToSend = new FormData();\r\n//     formDataToSend.append(\"primaryCategory\", formData.primaryCategory);\r\n//     formDataToSend.append(\"subCategory\", formData.subCategory);\r\n//     formDataToSend.append(\"productName\", formData.productName);\r\n\r\n//     if (formData.photo) {\r\n//       formDataToSend.append(\"photo\", formData.photo);\r\n//     } else if (formData.existingPhoto) {\r\n//       formDataToSend.append(\"existingPhoto\", formData.existingPhoto);\r\n//     }\r\n\r\n//     try {\r\n//       if (formData._id) {\r\n//         await categoryService.updateCategory(formData._id, formDataToSend);\r\n//       } else {\r\n//         await categoryService.addCategory(formDataToSend);\r\n//       }\r\n//       setPopupOpen(false);\r\n//       fetchCategories();\r\n//     } catch (error) {\r\n//       console.error(\"Error while submitting the form:\", error.response?.data || error);\r\n//       alert(\"An error occurred while submitting the form.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"master-container\">\r\n//       <h2>Category Master</h2>\r\n//       <button className=\"add-btn\" onClick={handleAddNew}>\r\n//         + Add Category\r\n//       </button>\r\n\r\n//       <table className=\"category-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Primary Category</th>\r\n//             <th>Sub Category</th>\r\n//             <th>Product Name</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {categories.map((item) => (\r\n//             <tr key={item._id}>\r\n//               <td>{item.primaryCategory || \"N/A\"}</td>\r\n//               <td>{item.subCategory || \"N/A\"}</td>\r\n//               <td>{item.products?.[0]?.productName || \"N/A\"}</td>\r\n//               <td>\r\n//                 {item.products?.[0]?.photo?.data && (\r\n//                   <img\r\n//                     src={`data:${item.products[0].photo.contentType};base64,${bufferToBase64(\r\n//                       item.products[0].photo.data.data\r\n//                     )}`}\r\n//                     alt=\"Product\"\r\n//                     style={{ width: \"100px\", height: \"100px\" }}\r\n//                   />\r\n//                 )}\r\n//                 <button className=\"edit-btn\" onClick={() => handleEdit(item)}>\r\n//                   Edit\r\n//                 </button>\r\n//                 <button className=\"delete-btn\" onClick={() => handleDelete(item._id)}>\r\n//                   Delete\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       {isPopupOpen && (\r\n//         <div className=\"popup-overlay\">\r\n//           <div className=\"popup-container\">\r\n//             <button className=\"close-btn\" onClick={() => setPopupOpen(false)}>\r\n//               Ã—\r\n//             </button>\r\n//             <form onSubmit={handleSubmit}>\r\n//               <label>Primary Category:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"primaryCategory\"\r\n//                 value={formData.primaryCategory || \"\"}\r\n//                 onChange={handleChange}\r\n//                 required\r\n//               />\r\n\r\n//               <label>Sub Category:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"subCategory\"\r\n//                 value={formData.subCategory || \"\"}\r\n//                 onChange={handleChange}\r\n//                 required\r\n//               />\r\n\r\n//               <label>Product Name:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"productName\"\r\n//                 value={formData.productName || \"\"}\r\n//                 onChange={handleChange}\r\n//                 required\r\n//               />\r\n\r\n//               <label>Product Photo:</label>\r\n//               {formData.existingPhoto && (\r\n//                 <div>\r\n//                   <p>Current Image:</p>\r\n//                   <img\r\n//                     src={formData.existingPhoto}\r\n//                     alt=\"Existing Product\"\r\n//                     style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\r\n//                   />\r\n//                 </div>\r\n//               )}\r\n//               <input type=\"file\" name=\"photo\" onChange={handleChange} />\r\n\r\n//               <button className=\"submit-btn\" type=\"submit\">\r\n//                 Save\r\n//               </button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CategoryMaster;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";  // Import the icons\r\nimport categoryService from \"../services/categoryService\";\r\nimport \"../styles/MasterForms.css\";\r\n\r\n/**\r\n * Recursively build a nested tree from the flat list of categories.\r\n */\r\nfunction buildTree(categories, parentId = null) {\r\n  return categories\r\n    .filter((cat) => String(cat.parentCategory) === String(parentId))\r\n    .map((cat) => ({\r\n      ...cat,\r\n      children: buildTree(categories, cat._id),\r\n    }));\r\n}\r\n\r\nconst CategoryMaster = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [isPopupOpen, setPopupOpen] = useState(false);\r\n\r\n  // Form fields\r\n  const [formData, setFormData] = useState({\r\n    _id: null,\r\n    productName: \"\",\r\n    alias: \"\",\r\n    parentCategory: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const fetchCategories = async () => {\r\n    const data = await categoryService.getCategories();\r\n    setCategories(data);\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    // Reset form\r\n    setFormData({\r\n      _id: null,\r\n      productName: \"\",\r\n      alias: \"\",\r\n      parentCategory: \"\",\r\n    });\r\n    setPopupOpen(true);\r\n  };\r\n\r\n  const handleEdit = (category) => {\r\n    setFormData({\r\n      _id: category._id,\r\n      productName: category.productName,\r\n      alias: category.alias || \"\",\r\n      parentCategory: category.parentCategory || \"\",\r\n    });\r\n    setPopupOpen(true);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await categoryService.deleteCategory(id);\r\n      fetchCategories();\r\n    } catch (error) {\r\n      alert(error.response?.data?.message || \"Error deleting category\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      productName: formData.productName,\r\n      alias: formData.alias,\r\n      parentCategory: formData.parentCategory === \"\" ? null : formData.parentCategory,\r\n    };\r\n\r\n    try {\r\n      if (formData._id) {\r\n        // Update existing\r\n        await categoryService.updateCategory(formData._id, payload);\r\n      } else {\r\n        // Add new\r\n        await categoryService.addCategory(payload);\r\n      }\r\n      setPopupOpen(false);\r\n      fetchCategories();\r\n    } catch (error) {\r\n      alert(error.response?.data?.message || \"Error submitting form\");\r\n    }\r\n  };\r\n\r\n  // Build the nested tree once from categories\r\n  const treeData = buildTree(categories);\r\n\r\n  /**\r\n   * Recursively render <tr> rows for each node in the tree.\r\n   * @param {Array} data - Array of category nodes (with .children).\r\n   * @param {number} level - Depth in the tree (for indentation).\r\n   * @returns {Array<JSX.Element>} An array of <tr> elements.\r\n   */\r\n  const renderRows = (data, level = 0) => {\r\n    return data.flatMap((node) => {\r\n      // Generate indentation (4 spaces per level)\r\n      const indentSpaces =\"--\".repeat(level * 4) + (level==0 ? `+` : \">\");\r\n      // Combine name + alias (if any)\r\n      const displayName =\r\n        indentSpaces + node.productName + (node.alias ? ` (${node.alias})` : \"\");\r\n\r\n      return [\r\n        <tr key={node._id}>\r\n          {/* 1) Tree structure column: preserve spacing */}\r\n          <td style={{ textAlign: \"left\", whiteSpace: \"pre\" }}>{displayName}</td>\r\n\r\n          {/* 2) Edit button */}\r\n          <td>\r\n            <button className=\"action-btn\" onClick={() => handleEdit(node)}>\r\n            <FaEdit /> {/* Icon for edit */}\r\n            </button>\r\n          </td>\r\n\r\n          {/* 3) Delete button */}\r\n          <td>\r\n            <button className=\"action-btn\" onClick={() => handleDelete(node._id)}>\r\n            <FaTrash /> {/* Icon for delete */}\r\n            </button>\r\n          </td>\r\n        </tr>,\r\n\r\n        // Recursively render the child rows\r\n        ...renderRows(node.children, level + 1),\r\n      ];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"master-container\">\r\n      <h2>Category Master</h2>\r\n\r\n      <button className=\"add-btn\" onClick={handleAddNew}>\r\n        + Add Category\r\n      </button>\r\n\r\n      {/* Scrollable container for the table */}\r\n      <div className=\"table-container\">\r\n        <table className=\"tree-table\">\r\n          <colgroup>\r\n            {/* 1) 40ch for the tree structure */}\r\n            <col style={{ width: \"40ch\" }} />\r\n            {/* 2) 20ch for Edit */}\r\n            <col style={{ width: \"20ch\" }} />\r\n            {/* 3) 20ch for Delete */}\r\n            <col style={{ width: \"20ch\" }} />\r\n          </colgroup>\r\n\r\n          {/* <thead>\r\n            <tr>\r\n              <th>Category Tree</th>\r\n              <th>Edit</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead> */}\r\n          <tbody>{renderRows(treeData)}</tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {isPopupOpen && (\r\n        <div className=\"popup-overlay\">\r\n          <div className=\"popup-container\">\r\n            <button className=\"close-btn\" onClick={() => setPopupOpen(false)}>\r\n              Ã—\r\n            </button>\r\n            <form onSubmit={handleSubmit} className=\"tally-form\">\r\n              <label>Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"productName\"\r\n                value={formData.productName}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n\r\n              <label>(alias):</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"alias\"\r\n                value={formData.alias}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <label>Under:</label>\r\n              <select\r\n                name=\"parentCategory\"\r\n                value={formData.parentCategory || \"\"}\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"\">Primary</option>\r\n                {categories\r\n                  .filter((cat) => cat._id !== formData._id)\r\n                  .map((cat) => (\r\n                    <option key={cat._id} value={cat._id}>\r\n                      {cat.productName}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n\r\n              <button className=\"submit-btn\" type=\"submit\">\r\n                Save\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryMaster;\r\n\r\n"],"mappings":";;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,OAAO,QAAQ,gBAAgB,CAAC,CAAE;AACnD,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAO,2BAA2B;;AAElC;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAGA,SAASC,SAASA,CAACC,UAAU,EAAmB;EAAA,IAAjBC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}