{"ast":null,"code":"import _objectSpread from \"D:/VYAVACH/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"D:\\\\VYAVACH\\\\client\\\\src\\\\components\\\\CategoryMaster.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import categoryService from \"../services/categoryService\";\n// import \"../styles/MasterForms.css\";\n\n// // Helper function: Convert buffer to Base64 in chunks\n// const bufferToBase64 = (buffer) => {\n//   let binary = \"\";\n//   const bytes = new Uint8Array(buffer);\n//   const chunkSize = 0x8000; // Process in chunks of 32768 bytes\n//   for (let i = 0; i < bytes.length; i += chunkSize) {\n//     binary += String.fromCharCode(...bytes.subarray(i, i + chunkSize));\n//   }\n//   return window.btoa(binary);\n// };\n\n// const CategoryMaster = () => {\n//   const [categories, setCategories] = useState([]);\n//   const [formData, setFormData] = useState({});\n//   const [isPopupOpen, setPopupOpen] = useState(false);\n\n//   useEffect(() => {\n//     fetchCategories();\n//   }, []);\n\n//   const fetchCategories = async () => {\n//     const data = await categoryService.getCategories();\n//     console.log(\"Fetched Categories:\", data);\n//     setCategories(data);\n//   };\n\n//   const handleAddNew = () => {\n//     setFormData({\n//       primaryCategory: \"\",\n//       subCategory: \"\",\n//       productName: \"\",\n//       photo: null,\n//     });\n//     setPopupOpen(true);\n//   };\n\n//   const handleEdit = (category) => {\n//     setFormData({\n//       _id: category._id,\n//       primaryCategory: category.primaryCategory || \"\",\n//       subCategory: category.subCategory || \"\",\n//       productName: category.products?.[0]?.productName || \"\",\n//       photo: null, // Reset file input\n//       existingPhoto: category.products?.[0]?.photo\n//         ? `data:${category.products[0].photo.contentType};base64,${bufferToBase64(\n//             category.products[0].photo.data.data\n//           )}`\n//         : null,\n//     });\n//     setPopupOpen(true);\n//   };\n\n//   const handleDelete = async (id) => {\n//     await categoryService.deleteCategory(id);\n//     fetchCategories();\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value, files } = e.target;\n//     if (name === \"photo\" && files.length > 0) {\n//       setFormData({ ...formData, photo: files[0] });\n//     } else {\n//       setFormData({ ...formData, [name]: value });\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const formDataToSend = new FormData();\n//     formDataToSend.append(\"primaryCategory\", formData.primaryCategory);\n//     formDataToSend.append(\"subCategory\", formData.subCategory);\n//     formDataToSend.append(\"productName\", formData.productName);\n\n//     if (formData.photo) {\n//       formDataToSend.append(\"photo\", formData.photo);\n//     } else if (formData.existingPhoto) {\n//       formDataToSend.append(\"existingPhoto\", formData.existingPhoto);\n//     }\n\n//     try {\n//       if (formData._id) {\n//         await categoryService.updateCategory(formData._id, formDataToSend);\n//       } else {\n//         await categoryService.addCategory(formDataToSend);\n//       }\n//       setPopupOpen(false);\n//       fetchCategories();\n//     } catch (error) {\n//       console.error(\"Error while submitting the form:\", error.response?.data || error);\n//       alert(\"An error occurred while submitting the form.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"master-container\">\n//       <h2>Category Master</h2>\n//       <button className=\"add-btn\" onClick={handleAddNew}>\n//         + Add Category\n//       </button>\n\n//       <table className=\"category-table\">\n//         <thead>\n//           <tr>\n//             <th>Primary Category</th>\n//             <th>Sub Category</th>\n//             <th>Product Name</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {categories.map((item) => (\n//             <tr key={item._id}>\n//               <td>{item.primaryCategory || \"N/A\"}</td>\n//               <td>{item.subCategory || \"N/A\"}</td>\n//               <td>{item.products?.[0]?.productName || \"N/A\"}</td>\n//               <td>\n//                 {item.products?.[0]?.photo?.data && (\n//                   <img\n//                     src={`data:${item.products[0].photo.contentType};base64,${bufferToBase64(\n//                       item.products[0].photo.data.data\n//                     )}`}\n//                     alt=\"Product\"\n//                     style={{ width: \"100px\", height: \"100px\" }}\n//                   />\n//                 )}\n//                 <button className=\"edit-btn\" onClick={() => handleEdit(item)}>\n//                   Edit\n//                 </button>\n//                 <button className=\"delete-btn\" onClick={() => handleDelete(item._id)}>\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {isPopupOpen && (\n//         <div className=\"popup-overlay\">\n//           <div className=\"popup-container\">\n//             <button className=\"close-btn\" onClick={() => setPopupOpen(false)}>\n//               ×\n//             </button>\n//             <form onSubmit={handleSubmit}>\n//               <label>Primary Category:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"primaryCategory\"\n//                 value={formData.primaryCategory || \"\"}\n//                 onChange={handleChange}\n//                 required\n//               />\n\n//               <label>Sub Category:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"subCategory\"\n//                 value={formData.subCategory || \"\"}\n//                 onChange={handleChange}\n//                 required\n//               />\n\n//               <label>Product Name:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"productName\"\n//                 value={formData.productName || \"\"}\n//                 onChange={handleChange}\n//                 required\n//               />\n\n//               <label>Product Photo:</label>\n//               {formData.existingPhoto && (\n//                 <div>\n//                   <p>Current Image:</p>\n//                   <img\n//                     src={formData.existingPhoto}\n//                     alt=\"Existing Product\"\n//                     style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\n//                   />\n//                 </div>\n//               )}\n//               <input type=\"file\" name=\"photo\" onChange={handleChange} />\n\n//               <button className=\"submit-btn\" type=\"submit\">\n//                 Save\n//               </button>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CategoryMaster;\nimport React, { useState, useEffect } from \"react\";\nimport categoryService from \"../services/categoryService\";\nimport \"../styles/MasterForms.css\";\n\n// Build a nested tree from the flat list\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction buildTree(categories) {\n  let parentId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return categories.filter(cat => String(cat.parentCategory) === String(parentId)).map(cat => _objectSpread(_objectSpread({}, cat), {}, {\n    children: buildTree(categories, cat._id)\n  }));\n}\n\n// Recursive component to render one category node and its children\nfunction CategoryNode(_ref) {\n  let {\n    node,\n    onEdit,\n    onDelete\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-label-col\",\n        children: [node.productName, node.alias ? \" (\".concat(node.alias, \")\") : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-actions-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-btn\",\n          onClick: () => onEdit(node),\n          children: \"\\u270F\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: () => onDelete(node._id),\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), node.children.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: node.children.map(child => /*#__PURE__*/_jsxDEV(CategoryNode, {\n        node: child,\n        onEdit: onEdit,\n        onDelete: onDelete\n      }, child._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n}\n_c = CategoryNode;\nconst CategoryMaster = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [isPopupOpen, setPopupOpen] = useState(false);\n\n  // Form fields\n  const [formData, setFormData] = useState({\n    _id: null,\n    productName: \"\",\n    alias: \"\",\n    parentCategory: \"\"\n  });\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  const fetchCategories = async () => {\n    const data = await categoryService.getCategories();\n    setCategories(data);\n  };\n  const handleAddNew = () => {\n    setFormData({\n      _id: null,\n      productName: \"\",\n      alias: \"\",\n      parentCategory: \"\"\n    });\n    setPopupOpen(true);\n  };\n  const handleEdit = category => {\n    setFormData({\n      _id: category._id,\n      productName: category.productName,\n      alias: category.alias || \"\",\n      parentCategory: category.parentCategory || \"\"\n    });\n    setPopupOpen(true);\n  };\n  const handleDelete = async id => {\n    try {\n      await categoryService.deleteCategory(id);\n      fetchCategories();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error deleting category\");\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      productName: formData.productName,\n      alias: formData.alias,\n      parentCategory: formData.parentCategory === \"\" ? null : formData.parentCategory\n    };\n    try {\n      if (formData._id) {\n        await categoryService.updateCategory(formData._id, payload);\n      } else {\n        await categoryService.addCategory(payload);\n      }\n      setPopupOpen(false);\n      fetchCategories();\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Error submitting form\");\n    }\n  };\n\n  // Build the nested tree\n  const treeData = buildTree(categories);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"master-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Category Master\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      onClick: handleAddNew,\n      children: \"+ Add Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"category-tree\",\n        children: treeData.map(node => /*#__PURE__*/_jsxDEV(CategoryNode, {\n          node: node,\n          onEdit: handleEdit,\n          onDelete: handleDelete\n        }, node._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => setPopupOpen(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"tally-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"productName\",\n            value: formData.productName,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"(alias):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"alias\",\n            value: formData.alias,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Under:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"parentCategory\",\n            value: formData.parentCategory || \"\",\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this), categories\n            // Don’t list itself as a parent\n            .filter(cat => cat._id !== formData._id).map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat._id,\n              children: cat.productName\n            }, cat._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryMaster, \"Qa5070IhW8pama8sHre5TzQXID0=\");\n_c2 = CategoryMaster;\nexport default CategoryMaster;\nvar _c, _c2;\n$RefreshReg$(_c, \"CategoryNode\");\n$RefreshReg$(_c2, \"CategoryMaster\");","map":{"version":3,"names":["React","useState","useEffect","categoryService","jsxDEV","_jsxDEV","buildTree","categories","parentId","arguments","length","undefined","filter","cat","String","parentCategory","map","_objectSpread","children","_id","CategoryNode","_ref","node","onEdit","onDelete","className","productName","alias","concat","fileName","_jsxFileName","lineNumber","columnNumber","onClick","child","_c","CategoryMaster","_s","setCategories","isPopupOpen","setPopupOpen","formData","setFormData","fetchCategories","data","getCategories","handleAddNew","handleEdit","category","handleDelete","id","deleteCategory","error","_error$response","_error$response$data","alert","response","message","handleChange","e","name","value","target","handleSubmit","preventDefault","payload","updateCategory","addCategory","_error$response2","_error$response2$data","treeData","onSubmit","type","onChange","required","_c2","$RefreshReg$"],"sources":["D:/VYAVACH/client/src/components/CategoryMaster.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import categoryService from \"../services/categoryService\";\r\n// import \"../styles/MasterForms.css\";\r\n\r\n// // Helper function: Convert buffer to Base64 in chunks\r\n// const bufferToBase64 = (buffer) => {\r\n//   let binary = \"\";\r\n//   const bytes = new Uint8Array(buffer);\r\n//   const chunkSize = 0x8000; // Process in chunks of 32768 bytes\r\n//   for (let i = 0; i < bytes.length; i += chunkSize) {\r\n//     binary += String.fromCharCode(...bytes.subarray(i, i + chunkSize));\r\n//   }\r\n//   return window.btoa(binary);\r\n// };\r\n\r\n// const CategoryMaster = () => {\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [formData, setFormData] = useState({});\r\n//   const [isPopupOpen, setPopupOpen] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     fetchCategories();\r\n//   }, []);\r\n\r\n//   const fetchCategories = async () => {\r\n//     const data = await categoryService.getCategories();\r\n//     console.log(\"Fetched Categories:\", data);\r\n//     setCategories(data);\r\n//   };\r\n\r\n//   const handleAddNew = () => {\r\n//     setFormData({\r\n//       primaryCategory: \"\",\r\n//       subCategory: \"\",\r\n//       productName: \"\",\r\n//       photo: null,\r\n//     });\r\n//     setPopupOpen(true);\r\n//   };\r\n\r\n//   const handleEdit = (category) => {\r\n//     setFormData({\r\n//       _id: category._id,\r\n//       primaryCategory: category.primaryCategory || \"\",\r\n//       subCategory: category.subCategory || \"\",\r\n//       productName: category.products?.[0]?.productName || \"\",\r\n//       photo: null, // Reset file input\r\n//       existingPhoto: category.products?.[0]?.photo\r\n//         ? `data:${category.products[0].photo.contentType};base64,${bufferToBase64(\r\n//             category.products[0].photo.data.data\r\n//           )}`\r\n//         : null,\r\n//     });\r\n//     setPopupOpen(true);\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     await categoryService.deleteCategory(id);\r\n//     fetchCategories();\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value, files } = e.target;\r\n//     if (name === \"photo\" && files.length > 0) {\r\n//       setFormData({ ...formData, photo: files[0] });\r\n//     } else {\r\n//       setFormData({ ...formData, [name]: value });\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const formDataToSend = new FormData();\r\n//     formDataToSend.append(\"primaryCategory\", formData.primaryCategory);\r\n//     formDataToSend.append(\"subCategory\", formData.subCategory);\r\n//     formDataToSend.append(\"productName\", formData.productName);\r\n\r\n//     if (formData.photo) {\r\n//       formDataToSend.append(\"photo\", formData.photo);\r\n//     } else if (formData.existingPhoto) {\r\n//       formDataToSend.append(\"existingPhoto\", formData.existingPhoto);\r\n//     }\r\n\r\n//     try {\r\n//       if (formData._id) {\r\n//         await categoryService.updateCategory(formData._id, formDataToSend);\r\n//       } else {\r\n//         await categoryService.addCategory(formDataToSend);\r\n//       }\r\n//       setPopupOpen(false);\r\n//       fetchCategories();\r\n//     } catch (error) {\r\n//       console.error(\"Error while submitting the form:\", error.response?.data || error);\r\n//       alert(\"An error occurred while submitting the form.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"master-container\">\r\n//       <h2>Category Master</h2>\r\n//       <button className=\"add-btn\" onClick={handleAddNew}>\r\n//         + Add Category\r\n//       </button>\r\n\r\n//       <table className=\"category-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Primary Category</th>\r\n//             <th>Sub Category</th>\r\n//             <th>Product Name</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {categories.map((item) => (\r\n//             <tr key={item._id}>\r\n//               <td>{item.primaryCategory || \"N/A\"}</td>\r\n//               <td>{item.subCategory || \"N/A\"}</td>\r\n//               <td>{item.products?.[0]?.productName || \"N/A\"}</td>\r\n//               <td>\r\n//                 {item.products?.[0]?.photo?.data && (\r\n//                   <img\r\n//                     src={`data:${item.products[0].photo.contentType};base64,${bufferToBase64(\r\n//                       item.products[0].photo.data.data\r\n//                     )}`}\r\n//                     alt=\"Product\"\r\n//                     style={{ width: \"100px\", height: \"100px\" }}\r\n//                   />\r\n//                 )}\r\n//                 <button className=\"edit-btn\" onClick={() => handleEdit(item)}>\r\n//                   Edit\r\n//                 </button>\r\n//                 <button className=\"delete-btn\" onClick={() => handleDelete(item._id)}>\r\n//                   Delete\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       {isPopupOpen && (\r\n//         <div className=\"popup-overlay\">\r\n//           <div className=\"popup-container\">\r\n//             <button className=\"close-btn\" onClick={() => setPopupOpen(false)}>\r\n//               ×\r\n//             </button>\r\n//             <form onSubmit={handleSubmit}>\r\n//               <label>Primary Category:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"primaryCategory\"\r\n//                 value={formData.primaryCategory || \"\"}\r\n//                 onChange={handleChange}\r\n//                 required\r\n//               />\r\n\r\n//               <label>Sub Category:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"subCategory\"\r\n//                 value={formData.subCategory || \"\"}\r\n//                 onChange={handleChange}\r\n//                 required\r\n//               />\r\n\r\n//               <label>Product Name:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"productName\"\r\n//                 value={formData.productName || \"\"}\r\n//                 onChange={handleChange}\r\n//                 required\r\n//               />\r\n\r\n//               <label>Product Photo:</label>\r\n//               {formData.existingPhoto && (\r\n//                 <div>\r\n//                   <p>Current Image:</p>\r\n//                   <img\r\n//                     src={formData.existingPhoto}\r\n//                     alt=\"Existing Product\"\r\n//                     style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\r\n//                   />\r\n//                 </div>\r\n//               )}\r\n//               <input type=\"file\" name=\"photo\" onChange={handleChange} />\r\n\r\n//               <button className=\"submit-btn\" type=\"submit\">\r\n//                 Save\r\n//               </button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CategoryMaster;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport categoryService from \"../services/categoryService\";\r\nimport \"../styles/MasterForms.css\";\r\n\r\n// Build a nested tree from the flat list\r\nfunction buildTree(categories, parentId = null) {\r\n  return categories\r\n    .filter((cat) => String(cat.parentCategory) === String(parentId))\r\n    .map((cat) => ({\r\n      ...cat,\r\n      children: buildTree(categories, cat._id),\r\n    }));\r\n}\r\n\r\n// Recursive component to render one category node and its children\r\nfunction CategoryNode({ node, onEdit, onDelete }) {\r\n  return (\r\n    <li>\r\n      <div className=\"tree-row\">\r\n        {/* Left column: category name & alias */}\r\n        <div className=\"tree-label-col\">\r\n          {node.productName}\r\n          {node.alias ? ` (${node.alias})` : \"\"}\r\n        </div>\r\n        {/* Right column: action buttons (edit/delete) */}\r\n        <div className=\"tree-actions-col\">\r\n          <button className=\"edit-btn\" onClick={() => onEdit(node)}>\r\n            ✏️\r\n          </button>\r\n          <button className=\"delete-btn\" onClick={() => onDelete(node._id)}>\r\n            🗑️\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {/* Render children if any */}\r\n      {node.children.length > 0 && (\r\n        <ul>\r\n          {node.children.map((child) => (\r\n            <CategoryNode\r\n              key={child._id}\r\n              node={child}\r\n              onEdit={onEdit}\r\n              onDelete={onDelete}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n\r\nconst CategoryMaster = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [isPopupOpen, setPopupOpen] = useState(false);\r\n\r\n  // Form fields\r\n  const [formData, setFormData] = useState({\r\n    _id: null,\r\n    productName: \"\",\r\n    alias: \"\",\r\n    parentCategory: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const fetchCategories = async () => {\r\n    const data = await categoryService.getCategories();\r\n    setCategories(data);\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    setFormData({\r\n      _id: null,\r\n      productName: \"\",\r\n      alias: \"\",\r\n      parentCategory: \"\",\r\n    });\r\n    setPopupOpen(true);\r\n  };\r\n\r\n  const handleEdit = (category) => {\r\n    setFormData({\r\n      _id: category._id,\r\n      productName: category.productName,\r\n      alias: category.alias || \"\",\r\n      parentCategory: category.parentCategory || \"\",\r\n    });\r\n    setPopupOpen(true);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await categoryService.deleteCategory(id);\r\n      fetchCategories();\r\n    } catch (error) {\r\n      alert(error.response?.data?.message || \"Error deleting category\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const payload = {\r\n      productName: formData.productName,\r\n      alias: formData.alias,\r\n      parentCategory: formData.parentCategory === \"\" ? null : formData.parentCategory,\r\n    };\r\n\r\n    try {\r\n      if (formData._id) {\r\n        await categoryService.updateCategory(formData._id, payload);\r\n      } else {\r\n        await categoryService.addCategory(payload);\r\n      }\r\n      setPopupOpen(false);\r\n      fetchCategories();\r\n    } catch (error) {\r\n      alert(error.response?.data?.message || \"Error submitting form\");\r\n    }\r\n  };\r\n\r\n  // Build the nested tree\r\n  const treeData = buildTree(categories);\r\n\r\n  return (\r\n    <div className=\"master-container\">\r\n      <h2>Category Master</h2>\r\n\r\n      <button className=\"add-btn\" onClick={handleAddNew}>\r\n        + Add Category\r\n      </button>\r\n\r\n      {/* Tree container with scroll if too many items */}\r\n      <div className=\"tree-container\">\r\n        <ul className=\"category-tree\">\r\n          {treeData.map((node) => (\r\n            <CategoryNode\r\n              key={node._id}\r\n              node={node}\r\n              onEdit={handleEdit}\r\n              onDelete={handleDelete}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {isPopupOpen && (\r\n        <div className=\"popup-overlay\">\r\n          <div className=\"popup-container\">\r\n            <button className=\"close-btn\" onClick={() => setPopupOpen(false)}>\r\n              ×\r\n            </button>\r\n            <form onSubmit={handleSubmit} className=\"tally-form\">\r\n              <label>Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"productName\"\r\n                value={formData.productName}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n\r\n              <label>(alias):</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"alias\"\r\n                value={formData.alias}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <label>Under:</label>\r\n              <select\r\n                name=\"parentCategory\"\r\n                value={formData.parentCategory || \"\"}\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"\">Primary</option>\r\n                {categories\r\n                  // Don’t list itself as a parent\r\n                  .filter((cat) => cat._id !== formData._id)\r\n                  .map((cat) => (\r\n                    <option key={cat._id} value={cat._id}>\r\n                      {cat.productName}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n\r\n              <button className=\"submit-btn\" type=\"submit\">\r\n                Save\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryMaster;\r\n"],"mappings":";;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAO,2BAA2B;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,SAASA,CAACC,UAAU,EAAmB;EAAA,IAAjBC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAC5C,OAAOF,UAAU,CACdK,MAAM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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}