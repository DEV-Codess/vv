{"ast":null,"code":"import _objectSpread from \"D:/vv/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"D:\\\\vv\\\\client\\\\src\\\\components\\\\InventoryMaster.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import inventoryService from \"../services/inventoryService\";\n// import categoryService from \"../services/categoryService\";\n// import unitService from \"../services/unitService\";\n// import \"../styles/InventoryMaster.css\"; // Make sure this path is correct\n\n// const InventoryMaster = () => {\n//   const [inventory, setInventory] = useState([]);\n//   const [categories, setCategories] = useState([]);\n//   const [units, setUnits] = useState([]);\n//   const [showModal, setShowModal] = useState(false);\n\n//   const [formData, setFormData] = useState({\n//     _id: null,\n//     code: \"\",\n//     name: \"\",\n//     category: \"\",\n//     unit: \"\",\n//     size: \"\",\n//     color: \"\",\n//     quantity: 0,\n//     rate: 0,\n//     value: 0,\n//     photo: null,\n//     existingPhoto: null,\n//   });\n\n//   useEffect(() => {\n//     fetchAllData();\n//   }, []);\n\n//   const fetchAllData = async () => {\n//     try {\n//       const invData = await inventoryService.getInventory();\n//       setInventory(invData);\n\n//       const catData = await categoryService.getCategories();\n//       setCategories(catData);\n\n//       const unitData = await unitService.getUnits();\n//       setUnits(unitData);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handleAddNew = () => {\n//     setFormData({\n//       _id: null,\n//       code: \"\",\n//       name: \"\",\n//       category: \"\",\n//       unit: \"\",\n//       size: \"\",\n//       color: \"\",\n//       quantity: 0,\n//       rate: 0,\n//       value: 0,\n//       photo: null,\n//       existingPhoto: null,\n//     });\n//     setShowModal(true);\n//   };\n\n//   const handleEdit = (item) => {\n//     setFormData({\n//       _id: item._id,\n//       code: item.code || \"\",\n//       name: item.name || \"\",\n//       category: item.category?._id || \"\",\n//       unit: item.unit?._id || \"\",\n//       size: item.size || \"\",\n//       color: item.color || \"\",\n//       quantity: item.quantity || 0,\n//       rate: item.rate || 0,\n//       value: item.value || 0,\n//       photo: null,\n//       existingPhoto: item.photo\n//         ? `http://localhost:5000/api/inventory/photo/${item.photo}`\n//         : null,\n//     });\n//     setShowModal(true);\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm(\"Are you sure you want to delete this item?\")) return;\n//     try {\n//       await inventoryService.deleteInventory(id);\n//       fetchAllData();\n//     } catch (error) {\n//       console.error(\"Error deleting item:\", error);\n//     }\n//   };\n\n//   // Handle changes (auto-calc value if quantity or rate changes)\n//   const handleChange = (e) => {\n//     const { name, value, files } = e.target;\n//     if (name === \"photo\" && files?.length > 0) {\n//       setFormData((prev) => ({ ...prev, photo: files[0] }));\n//     } else if (name === \"quantity\" || name === \"rate\") {\n//       const numericVal = Math.max(0, parseFloat(value) || 0);\n//       const newState = { ...formData, [name]: numericVal };\n//       newState.value =\n//         name === \"quantity\"\n//           ? newState.rate * numericVal\n//           : newState.quantity * numericVal;\n//       setFormData(newState);\n//     } else {\n//       setFormData((prev) => ({ ...prev, [name]: value }));\n//     }\n//   };\n\n//   // Submit form (Create or Update)\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const payload = new FormData();\n//       if (formData._id) {\n//         // For updates, include code if it exists\n//         payload.append(\"code\", formData.code);\n//       }\n\n//       payload.append(\"name\", formData.name);\n//       payload.append(\"category\", formData.category);\n//       payload.append(\"unit\", formData.unit);\n//       payload.append(\"size\", formData.size);\n//       payload.append(\"color\", formData.color);\n//       payload.append(\"quantity\", formData.quantity);\n//       payload.append(\"rate\", formData.rate);\n//       payload.append(\"value\", formData.value);\n\n//       if (formData.photo) {\n//         payload.append(\"photo\", formData.photo);\n//       } else if (formData.existingPhoto) {\n//         payload.append(\"existingPhoto\", formData.existingPhoto);\n//       }\n\n//       if (formData._id) {\n//         await inventoryService.updateInventory(formData._id, payload);\n//       } else {\n//         await inventoryService.addInventory(payload);\n//       }\n//       fetchAllData();\n//       setShowModal(false);\n//     } catch (error) {\n//       console.error(\"Error saving inventory:\", error);\n//       alert(\"Failed to save inventory item.\");\n//     }\n//   };\n\n//   // For displaying unit symbol in quantity field\n//   const selectedUnit = units.find((u) => String(u._id) === String(formData.unit));\n//   const unitSymbol = selectedUnit ? selectedUnit.symbol : \"\";\n\n//   return (\n//     <div className=\"im-wrapper\">\n//       <div className=\"im-container\">\n//         {/* Header Row: Title + Add Button */}\n//         <div className=\"im-header\">\n//           <h2 className=\"im-heading\">Inventory Master</h2>\n//           <button className=\"im-add-btn\" onClick={handleAddNew}>\n//             + Add Product\n//           </button>\n//         </div>\n\n//         {/* Scrollable table container */}\n//         <div className=\"im-table-container\">\n//           <table className=\"im-table\">\n//             <thead>\n//               <tr>\n//                 <th>Code</th>\n//                 <th>Name</th>\n//                 <th>Under</th>\n//                 <th>Unit</th>\n//                 <th>Size</th>\n//                 <th>Color</th>\n//                 <th>Quantity</th>\n//                 <th>Rate</th>\n//                 <th>Value</th>\n//                 <th>Photo</th>\n//                 <th>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {inventory.map((item) => (\n//                 <tr key={item._id}>\n//                   <td>{item.code}</td>\n//                   <td>{item.name}</td>\n//                   <td>{item.category?.productName || \"—\"}</td>\n//                   <td>{item.unit?.symbol || \"—\"}</td>\n//                   <td>{item.size}</td>\n//                   <td>{item.color}</td>\n//                   <td>{item.quantity}</td>\n//                   <td>{item.rate}</td>\n//                   <td>{item.value}</td>\n//                   <td>\n//                     {item.photo && (\n//                       <img\n//                         src={`http://localhost:5000/api/inventory/photo/${item.photo}`}\n//                         alt=\"item\"\n//                         style={{ width: \"40px\", height: \"40px\", objectFit: \"cover\" }}\n//                       />\n//                     )}\n//                   </td>\n//                   <td>\n//                     <button className=\"im-edit-btn\" onClick={() => handleEdit(item)}>\n//                       Edit\n//                     </button>\n//                     <button\n//                       className=\"im-delete-btn\"\n//                       onClick={() => handleDelete(item._id)}\n//                     >\n//                       Delete\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n\n//         {/* Modal for Add/Edit */}\n//         {showModal && (\n//   <div className=\"im-overlay\">\n//     <div className=\"im-modal\">\n//       <button className=\"im-close-btn\" onClick={() => setShowModal(false)}>\n//         &times;\n//       </button>\n//       <h3>{formData._id ? \"Edit Product\" : \"Add Product\"}</h3>\n\n//       <form onSubmit={handleSubmit} className=\"im-form-grid\">\n//         {/* Row 1: Code + Name */}\n//         <div className=\"form-field\">\n//           <label>Code:</label>\n//           <input\n//             type=\"text\"\n//             name=\"code\"\n//             value={formData.code}\n//             onChange={handleChange}\n//           />\n//         </div>\n\n//         <div className=\"form-field\">\n//           <label>Name:</label>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             value={formData.name}\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n\n//         {/* Row 2: Under + Unit */}\n//         <div className=\"form-field\">\n//           <label>Under:</label>\n//           <select\n//             name=\"category\"\n//             value={formData.category}\n//             onChange={handleChange}\n//             required\n//           >\n//             <option value=\"\">-- Select Category --</option>\n//             {categories.map((cat) => (\n//               <option key={cat._id} value={cat._id}>\n//                 {cat.productName}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n\n//         <div className=\"form-field\">\n//           <label>Unit:</label>\n//           <select\n//             name=\"unit\"\n//             value={formData.unit}\n//             onChange={handleChange}\n//             required\n//           >\n//             <option value=\"\">-- Select Unit --</option>\n//             {units.map((u) => (\n//               <option key={u._id} value={u._id}>\n//                 {u.symbol}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n\n//         {/* Row 3: Size + Color */}\n//         <div className=\"form-field\">\n//           <label>Size:</label>\n//           <input\n//             type=\"text\"\n//             name=\"size\"\n//             value={formData.size}\n//             onChange={handleChange}\n//           />\n//         </div>\n\n//         <div className=\"form-field\">\n//           <label>Color:</label>\n//           <input\n//             type=\"text\"\n//             name=\"color\"\n//             value={formData.color}\n//             onChange={handleChange}\n//           />\n//         </div>\n\n//         {/* Row 4: Quantity + Rate */}\n//         <div className=\"form-field\">\n//           <label>Quantity:</label>\n//           <div className=\"quantity-input-group\">\n//             <input\n//               type=\"number\"\n//               min=\"0\"\n//               step=\"any\"\n//               name=\"quantity\"\n//               value={formData.quantity}\n//               onChange={handleChange}\n//               required\n//             />\n//             <span className=\"quantity-unit\">{unitSymbol}</span>\n//           </div>\n//         </div>\n\n//         <div className=\"form-field\">\n//           <label>Rate/item:</label>\n//           <input\n//             type=\"number\"\n//             min=\"0\"\n//             step=\"any\"\n//             name=\"rate\"\n//             value={formData.rate}\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n\n//         {/* Row 5: Value + Photo (photo might be a full row if you prefer) */}\n//         <div className=\"form-field\">\n//           <label>Value:</label>\n//           <input\n//             type=\"number\"\n//             min=\"0\"\n//             step=\"any\"\n//             name=\"value\"\n//             value={formData.value}\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n\n//         {/* Photo spanning both columns if you want */}\n//         <div className=\"form-field full-span\">\n//           <label>Photo:</label>\n//           <div className=\"photo-row\">\n//             {formData.existingPhoto && (\n//               <img\n//                 src={formData.existingPhoto}\n//                 alt=\"existing\"\n//                 style={{ width: \"50px\", height: \"50px\", objectFit: \"cover\" }}\n//               />\n//             )}\n//             <input type=\"file\" name=\"photo\" onChange={handleChange} />\n//           </div>\n//         </div>\n\n//         {/* Final row: Save button (full span) */}\n//         <div className=\"form-field full-span\" style={{ textAlign: \"center\" }}>\n//           <button type=\"submit\" className=\"im-save-btn\">\n//             Save\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n//   </div>\n// )}\n\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default InventoryMaster;\nimport React, { useState, useEffect } from \"react\";\nimport inventoryService from \"../services/inventoryService\";\nimport categoryService from \"../services/categoryService\";\nimport unitService from \"../services/unitService\";\nimport \"../styles/InventoryMaster.css\"; // Make sure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InventoryMaster = () => {\n  _s();\n  const [inventory, setInventory] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [formData, setFormData] = useState({\n    _id: null,\n    // Removed code property since it is auto-generated.\n    name: \"\",\n    category: \"\",\n    unit: \"\",\n    size: \"\",\n    color: \"\",\n    quantity: 0,\n    rate: 0,\n    value: 0,\n    photo: null,\n    existingPhoto: null\n  });\n  useEffect(() => {\n    fetchAllData();\n  }, []);\n  const fetchAllData = async () => {\n    try {\n      const invData = await inventoryService.getInventory();\n      setInventory(invData);\n      const catData = await categoryService.getCategories();\n      setCategories(catData);\n      const unitData = await unitService.getUnits();\n      setUnits(unitData);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleAddNew = () => {\n    setFormData({\n      _id: null,\n      // Removed code field here\n      name: \"\",\n      category: \"\",\n      unit: \"\",\n      size: \"\",\n      color: \"\",\n      quantity: 0,\n      rate: 0,\n      value: 0,\n      photo: null,\n      existingPhoto: null\n    });\n    setShowModal(true);\n  };\n  const handleEdit = item => {\n    var _item$category, _item$unit;\n    setFormData({\n      _id: item._id,\n      // Removed code property\n      name: item.name || \"\",\n      category: ((_item$category = item.category) === null || _item$category === void 0 ? void 0 : _item$category._id) || \"\",\n      unit: ((_item$unit = item.unit) === null || _item$unit === void 0 ? void 0 : _item$unit._id) || \"\",\n      size: item.size || \"\",\n      color: item.color || \"\",\n      quantity: item.quantity || 0,\n      rate: item.rate || 0,\n      value: item.value || 0,\n      photo: null,\n      existingPhoto: item.photo ? \"http://localhost:5000/api/inventory/photo/\".concat(item.photo) : null\n    });\n    setShowModal(true);\n  };\n  const handleDelete = async id => {\n    if (!window.confirm(\"Are you sure you want to delete this item?\")) return;\n    try {\n      await inventoryService.deleteInventory(id);\n      fetchAllData();\n    } catch (error) {\n      console.error(\"Error deleting item:\", error);\n    }\n  };\n\n  // Handle changes (auto-calc value if quantity or rate changes)\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n    if (name === \"photo\" && (files === null || files === void 0 ? void 0 : files.length) > 0) {\n      setFormData(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        photo: files[0]\n      }));\n    } else if (name === \"quantity\" || name === \"rate\") {\n      const numericVal = Math.max(0, parseFloat(value) || 0);\n      const newState = _objectSpread(_objectSpread({}, formData), {}, {\n        [name]: numericVal\n      });\n      newState.value = name === \"quantity\" ? newState.rate * numericVal : newState.quantity * numericVal;\n      setFormData(newState);\n    } else {\n      setFormData(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        [name]: value\n      }));\n    }\n  };\n\n  // Submit form (Create or Update)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const payload = new FormData();\n      // Removed code from payload; code will be auto-generated\n      payload.append(\"name\", formData.name);\n      payload.append(\"category\", formData.category);\n      payload.append(\"unit\", formData.unit);\n      payload.append(\"size\", formData.size);\n      payload.append(\"color\", formData.color);\n      payload.append(\"quantity\", formData.quantity);\n      payload.append(\"rate\", formData.rate);\n      payload.append(\"value\", formData.value);\n      if (formData.photo) {\n        payload.append(\"photo\", formData.photo);\n      } else if (formData.existingPhoto) {\n        payload.append(\"existingPhoto\", formData.existingPhoto);\n      }\n      if (formData._id) {\n        await inventoryService.updateInventory(formData._id, payload);\n      } else {\n        await inventoryService.addInventory(payload);\n      }\n      fetchAllData();\n      setShowModal(false);\n    } catch (error) {\n      console.error(\"Error saving inventory:\", error);\n      alert(\"Failed to save inventory item.\");\n    }\n  };\n\n  // For displaying unit symbol in quantity field\n  const selectedUnit = units.find(u => String(u._id) === String(formData.unit));\n  const unitSymbol = selectedUnit ? selectedUnit.symbol : \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"im-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"im-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"im-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"im-heading\",\n          children: \"Inventory Master\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"im-add-btn\",\n          onClick: handleAddNew,\n          children: \"+ Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"im-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"im-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Under\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: inventory.map(item => {\n              var _item$category2, _item$unit2;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ((_item$category2 = item.category) === null || _item$category2 === void 0 ? void 0 : _item$category2.productName) || \"—\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ((_item$unit2 = item.unit) === null || _item$unit2 === void 0 ? void 0 : _item$unit2.symbol) || \"—\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.size\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.color\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.rate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"http://localhost:5000/api/inventory/photo/\".concat(item.photo),\n                    alt: \"item\",\n                    style: {\n                      width: \"40px\",\n                      height: \"40px\",\n                      objectFit: \"cover\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 580,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"im-edit-btn\",\n                    onClick: () => handleEdit(item),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 588,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"im-delete-btn\",\n                    onClick: () => handleDelete(item._id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 591,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 19\n                }, this)]\n              }, item._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"im-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"im-modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"im-close-btn\",\n            onClick: () => setShowModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: formData._id ? \"Edit Product\" : \"Add Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"im-form-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                value: formData.name,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Under:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"category\",\n                value: formData.category,\n                onChange: handleChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-- Select Category --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 21\n                }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: cat._id,\n                  children: cat.productName\n                }, cat._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Unit:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"unit\",\n                value: formData.unit,\n                onChange: handleChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-- Select Unit --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 653,\n                  columnNumber: 21\n                }, this), units.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: u._id,\n                  children: u.symbol\n                }, u._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Size:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"size\",\n                value: formData.size,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Color:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"color\",\n                value: formData.color,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Quantity:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"quantity-input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  step: \"any\",\n                  name: \"quantity\",\n                  value: formData.quantity,\n                  onChange: handleChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"quantity-unit\",\n                  children: unitSymbol\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Rate/item:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                step: \"any\",\n                name: \"rate\",\n                value: formData.rate,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Value:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                step: \"any\",\n                name: \"value\",\n                value: formData.value,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field full-span\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Photo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"photo-row\",\n                children: [formData.existingPhoto && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: formData.existingPhoto,\n                  alt: \"existing\",\n                  style: {\n                    width: \"50px\",\n                    height: \"50px\",\n                    objectFit: \"cover\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 732,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  name: \"photo\",\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 738,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field full-span\",\n              style: {\n                textAlign: \"center\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"im-save-btn\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 538,\n    columnNumber: 5\n  }, this);\n};\n_s(InventoryMaster, \"mO0Ll0b4mDfwM6h+spd7dGjc5YM=\");\n_c = InventoryMaster;\nexport default InventoryMaster;\nvar _c;\n$RefreshReg$(_c, \"InventoryMaster\");","map":{"version":3,"names":["React","useState","useEffect","inventoryService","categoryService","unitService","jsxDEV","_jsxDEV","InventoryMaster","_s","inventory","setInventory","categories","setCategories","units","setUnits","showModal","setShowModal","formData","setFormData","_id","name","category","unit","size","color","quantity","rate","value","photo","existingPhoto","fetchAllData","invData","getInventory","catData","getCategories","unitData","getUnits","error","console","handleAddNew","handleEdit","item","_item$category","_item$unit","concat","handleDelete","id","window","confirm","deleteInventory","handleChange","e","files","target","length","prev","_objectSpread","numericVal","Math","max","parseFloat","newState","handleSubmit","preventDefault","payload","FormData","append","updateInventory","addInventory","alert","selectedUnit","find","u","String","unitSymbol","symbol","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_item$category2","_item$unit2","productName","src","alt","style","width","height","objectFit","onSubmit","type","onChange","required","cat","min","step","textAlign","_c","$RefreshReg$"],"sources":["D:/vv/client/src/components/InventoryMaster.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import inventoryService from \"../services/inventoryService\";\r\n// import categoryService from \"../services/categoryService\";\r\n// import unitService from \"../services/unitService\";\r\n// import \"../styles/InventoryMaster.css\"; // Make sure this path is correct\r\n\r\n// const InventoryMaster = () => {\r\n//   const [inventory, setInventory] = useState([]);\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [units, setUnits] = useState([]);\r\n//   const [showModal, setShowModal] = useState(false);\r\n\r\n//   const [formData, setFormData] = useState({\r\n//     _id: null,\r\n//     code: \"\",\r\n//     name: \"\",\r\n//     category: \"\",\r\n//     unit: \"\",\r\n//     size: \"\",\r\n//     color: \"\",\r\n//     quantity: 0,\r\n//     rate: 0,\r\n//     value: 0,\r\n//     photo: null,\r\n//     existingPhoto: null,\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetchAllData();\r\n//   }, []);\r\n\r\n//   const fetchAllData = async () => {\r\n//     try {\r\n//       const invData = await inventoryService.getInventory();\r\n//       setInventory(invData);\r\n\r\n//       const catData = await categoryService.getCategories();\r\n//       setCategories(catData);\r\n\r\n//       const unitData = await unitService.getUnits();\r\n//       setUnits(unitData);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleAddNew = () => {\r\n//     setFormData({\r\n//       _id: null,\r\n//       code: \"\",\r\n//       name: \"\",\r\n//       category: \"\",\r\n//       unit: \"\",\r\n//       size: \"\",\r\n//       color: \"\",\r\n//       quantity: 0,\r\n//       rate: 0,\r\n//       value: 0,\r\n//       photo: null,\r\n//       existingPhoto: null,\r\n//     });\r\n//     setShowModal(true);\r\n//   };\r\n\r\n//   const handleEdit = (item) => {\r\n//     setFormData({\r\n//       _id: item._id,\r\n//       code: item.code || \"\",\r\n//       name: item.name || \"\",\r\n//       category: item.category?._id || \"\",\r\n//       unit: item.unit?._id || \"\",\r\n//       size: item.size || \"\",\r\n//       color: item.color || \"\",\r\n//       quantity: item.quantity || 0,\r\n//       rate: item.rate || 0,\r\n//       value: item.value || 0,\r\n//       photo: null,\r\n//       existingPhoto: item.photo\r\n//         ? `http://localhost:5000/api/inventory/photo/${item.photo}`\r\n//         : null,\r\n//     });\r\n//     setShowModal(true);\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (!window.confirm(\"Are you sure you want to delete this item?\")) return;\r\n//     try {\r\n//       await inventoryService.deleteInventory(id);\r\n//       fetchAllData();\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting item:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Handle changes (auto-calc value if quantity or rate changes)\r\n//   const handleChange = (e) => {\r\n//     const { name, value, files } = e.target;\r\n//     if (name === \"photo\" && files?.length > 0) {\r\n//       setFormData((prev) => ({ ...prev, photo: files[0] }));\r\n//     } else if (name === \"quantity\" || name === \"rate\") {\r\n//       const numericVal = Math.max(0, parseFloat(value) || 0);\r\n//       const newState = { ...formData, [name]: numericVal };\r\n//       newState.value =\r\n//         name === \"quantity\"\r\n//           ? newState.rate * numericVal\r\n//           : newState.quantity * numericVal;\r\n//       setFormData(newState);\r\n//     } else {\r\n//       setFormData((prev) => ({ ...prev, [name]: value }));\r\n//     }\r\n//   };\r\n\r\n//   // Submit form (Create or Update)\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const payload = new FormData();\r\n//       if (formData._id) {\r\n//         // For updates, include code if it exists\r\n//         payload.append(\"code\", formData.code);\r\n//       }\r\n\r\n//       payload.append(\"name\", formData.name);\r\n//       payload.append(\"category\", formData.category);\r\n//       payload.append(\"unit\", formData.unit);\r\n//       payload.append(\"size\", formData.size);\r\n//       payload.append(\"color\", formData.color);\r\n//       payload.append(\"quantity\", formData.quantity);\r\n//       payload.append(\"rate\", formData.rate);\r\n//       payload.append(\"value\", formData.value);\r\n\r\n//       if (formData.photo) {\r\n//         payload.append(\"photo\", formData.photo);\r\n//       } else if (formData.existingPhoto) {\r\n//         payload.append(\"existingPhoto\", formData.existingPhoto);\r\n//       }\r\n\r\n//       if (formData._id) {\r\n//         await inventoryService.updateInventory(formData._id, payload);\r\n//       } else {\r\n//         await inventoryService.addInventory(payload);\r\n//       }\r\n//       fetchAllData();\r\n//       setShowModal(false);\r\n//     } catch (error) {\r\n//       console.error(\"Error saving inventory:\", error);\r\n//       alert(\"Failed to save inventory item.\");\r\n//     }\r\n//   };\r\n\r\n//   // For displaying unit symbol in quantity field\r\n//   const selectedUnit = units.find((u) => String(u._id) === String(formData.unit));\r\n//   const unitSymbol = selectedUnit ? selectedUnit.symbol : \"\";\r\n\r\n//   return (\r\n//     <div className=\"im-wrapper\">\r\n//       <div className=\"im-container\">\r\n//         {/* Header Row: Title + Add Button */}\r\n//         <div className=\"im-header\">\r\n//           <h2 className=\"im-heading\">Inventory Master</h2>\r\n//           <button className=\"im-add-btn\" onClick={handleAddNew}>\r\n//             + Add Product\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* Scrollable table container */}\r\n//         <div className=\"im-table-container\">\r\n//           <table className=\"im-table\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Code</th>\r\n//                 <th>Name</th>\r\n//                 <th>Under</th>\r\n//                 <th>Unit</th>\r\n//                 <th>Size</th>\r\n//                 <th>Color</th>\r\n//                 <th>Quantity</th>\r\n//                 <th>Rate</th>\r\n//                 <th>Value</th>\r\n//                 <th>Photo</th>\r\n//                 <th>Actions</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {inventory.map((item) => (\r\n//                 <tr key={item._id}>\r\n//                   <td>{item.code}</td>\r\n//                   <td>{item.name}</td>\r\n//                   <td>{item.category?.productName || \"—\"}</td>\r\n//                   <td>{item.unit?.symbol || \"—\"}</td>\r\n//                   <td>{item.size}</td>\r\n//                   <td>{item.color}</td>\r\n//                   <td>{item.quantity}</td>\r\n//                   <td>{item.rate}</td>\r\n//                   <td>{item.value}</td>\r\n//                   <td>\r\n//                     {item.photo && (\r\n//                       <img\r\n//                         src={`http://localhost:5000/api/inventory/photo/${item.photo}`}\r\n//                         alt=\"item\"\r\n//                         style={{ width: \"40px\", height: \"40px\", objectFit: \"cover\" }}\r\n//                       />\r\n//                     )}\r\n//                   </td>\r\n//                   <td>\r\n//                     <button className=\"im-edit-btn\" onClick={() => handleEdit(item)}>\r\n//                       Edit\r\n//                     </button>\r\n//                     <button\r\n//                       className=\"im-delete-btn\"\r\n//                       onClick={() => handleDelete(item._id)}\r\n//                     >\r\n//                       Delete\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n\r\n//         {/* Modal for Add/Edit */}\r\n//         {showModal && (\r\n//   <div className=\"im-overlay\">\r\n//     <div className=\"im-modal\">\r\n//       <button className=\"im-close-btn\" onClick={() => setShowModal(false)}>\r\n//         &times;\r\n//       </button>\r\n//       <h3>{formData._id ? \"Edit Product\" : \"Add Product\"}</h3>\r\n\r\n//       <form onSubmit={handleSubmit} className=\"im-form-grid\">\r\n//         {/* Row 1: Code + Name */}\r\n//         <div className=\"form-field\">\r\n//           <label>Code:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"code\"\r\n//             value={formData.code}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-field\">\r\n//           <label>Name:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             value={formData.name}\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Row 2: Under + Unit */}\r\n//         <div className=\"form-field\">\r\n//           <label>Under:</label>\r\n//           <select\r\n//             name=\"category\"\r\n//             value={formData.category}\r\n//             onChange={handleChange}\r\n//             required\r\n//           >\r\n//             <option value=\"\">-- Select Category --</option>\r\n//             {categories.map((cat) => (\r\n//               <option key={cat._id} value={cat._id}>\r\n//                 {cat.productName}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div className=\"form-field\">\r\n//           <label>Unit:</label>\r\n//           <select\r\n//             name=\"unit\"\r\n//             value={formData.unit}\r\n//             onChange={handleChange}\r\n//             required\r\n//           >\r\n//             <option value=\"\">-- Select Unit --</option>\r\n//             {units.map((u) => (\r\n//               <option key={u._id} value={u._id}>\r\n//                 {u.symbol}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </div>\r\n\r\n//         {/* Row 3: Size + Color */}\r\n//         <div className=\"form-field\">\r\n//           <label>Size:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"size\"\r\n//             value={formData.size}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-field\">\r\n//           <label>Color:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"color\"\r\n//             value={formData.color}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Row 4: Quantity + Rate */}\r\n//         <div className=\"form-field\">\r\n//           <label>Quantity:</label>\r\n//           <div className=\"quantity-input-group\">\r\n//             <input\r\n//               type=\"number\"\r\n//               min=\"0\"\r\n//               step=\"any\"\r\n//               name=\"quantity\"\r\n//               value={formData.quantity}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <span className=\"quantity-unit\">{unitSymbol}</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"form-field\">\r\n//           <label>Rate/item:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             min=\"0\"\r\n//             step=\"any\"\r\n//             name=\"rate\"\r\n//             value={formData.rate}\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Row 5: Value + Photo (photo might be a full row if you prefer) */}\r\n//         <div className=\"form-field\">\r\n//           <label>Value:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             min=\"0\"\r\n//             step=\"any\"\r\n//             name=\"value\"\r\n//             value={formData.value}\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Photo spanning both columns if you want */}\r\n//         <div className=\"form-field full-span\">\r\n//           <label>Photo:</label>\r\n//           <div className=\"photo-row\">\r\n//             {formData.existingPhoto && (\r\n//               <img\r\n//                 src={formData.existingPhoto}\r\n//                 alt=\"existing\"\r\n//                 style={{ width: \"50px\", height: \"50px\", objectFit: \"cover\" }}\r\n//               />\r\n//             )}\r\n//             <input type=\"file\" name=\"photo\" onChange={handleChange} />\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Final row: Save button (full span) */}\r\n//         <div className=\"form-field full-span\" style={{ textAlign: \"center\" }}>\r\n//           <button type=\"submit\" className=\"im-save-btn\">\r\n//             Save\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   </div>\r\n// )}\r\n\r\n\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default InventoryMaster;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport inventoryService from \"../services/inventoryService\";\r\nimport categoryService from \"../services/categoryService\";\r\nimport unitService from \"../services/unitService\";\r\nimport \"../styles/InventoryMaster.css\"; // Make sure this path is correct\r\n\r\nconst InventoryMaster = () => {\r\n  const [inventory, setInventory] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [units, setUnits] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    _id: null,\r\n    // Removed code property since it is auto-generated.\r\n    name: \"\",\r\n    category: \"\",\r\n    unit: \"\",\r\n    size: \"\",\r\n    color: \"\",\r\n    quantity: 0,\r\n    rate: 0,\r\n    value: 0,\r\n    photo: null,\r\n    existingPhoto: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchAllData();\r\n  }, []);\r\n\r\n  const fetchAllData = async () => {\r\n    try {\r\n      const invData = await inventoryService.getInventory();\r\n      setInventory(invData);\r\n\r\n      const catData = await categoryService.getCategories();\r\n      setCategories(catData);\r\n\r\n      const unitData = await unitService.getUnits();\r\n      setUnits(unitData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    setFormData({\r\n      _id: null,\r\n      // Removed code field here\r\n      name: \"\",\r\n      category: \"\",\r\n      unit: \"\",\r\n      size: \"\",\r\n      color: \"\",\r\n      quantity: 0,\r\n      rate: 0,\r\n      value: 0,\r\n      photo: null,\r\n      existingPhoto: null,\r\n    });\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleEdit = (item) => {\r\n    setFormData({\r\n      _id: item._id,\r\n      // Removed code property\r\n      name: item.name || \"\",\r\n      category: item.category?._id || \"\",\r\n      unit: item.unit?._id || \"\",\r\n      size: item.size || \"\",\r\n      color: item.color || \"\",\r\n      quantity: item.quantity || 0,\r\n      rate: item.rate || 0,\r\n      value: item.value || 0,\r\n      photo: null,\r\n      existingPhoto: item.photo\r\n        ? `http://localhost:5000/api/inventory/photo/${item.photo}`\r\n        : null,\r\n    });\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this item?\")) return;\r\n    try {\r\n      await inventoryService.deleteInventory(id);\r\n      fetchAllData();\r\n    } catch (error) {\r\n      console.error(\"Error deleting item:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle changes (auto-calc value if quantity or rate changes)\r\n  const handleChange = (e) => {\r\n    const { name, value, files } = e.target;\r\n    if (name === \"photo\" && files?.length > 0) {\r\n      setFormData((prev) => ({ ...prev, photo: files[0] }));\r\n    } else if (name === \"quantity\" || name === \"rate\") {\r\n      const numericVal = Math.max(0, parseFloat(value) || 0);\r\n      const newState = { ...formData, [name]: numericVal };\r\n      newState.value =\r\n        name === \"quantity\"\r\n          ? newState.rate * numericVal\r\n          : newState.quantity * numericVal;\r\n      setFormData(newState);\r\n    } else {\r\n      setFormData((prev) => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n\r\n  // Submit form (Create or Update)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const payload = new FormData();\r\n      // Removed code from payload; code will be auto-generated\r\n      payload.append(\"name\", formData.name);\r\n      payload.append(\"category\", formData.category);\r\n      payload.append(\"unit\", formData.unit);\r\n      payload.append(\"size\", formData.size);\r\n      payload.append(\"color\", formData.color);\r\n      payload.append(\"quantity\", formData.quantity);\r\n      payload.append(\"rate\", formData.rate);\r\n      payload.append(\"value\", formData.value);\r\n\r\n      if (formData.photo) {\r\n        payload.append(\"photo\", formData.photo);\r\n      } else if (formData.existingPhoto) {\r\n        payload.append(\"existingPhoto\", formData.existingPhoto);\r\n      }\r\n\r\n      if (formData._id) {\r\n        await inventoryService.updateInventory(formData._id, payload);\r\n      } else {\r\n        await inventoryService.addInventory(payload);\r\n      }\r\n      fetchAllData();\r\n      setShowModal(false);\r\n    } catch (error) {\r\n      console.error(\"Error saving inventory:\", error);\r\n      alert(\"Failed to save inventory item.\");\r\n    }\r\n  };\r\n\r\n  // For displaying unit symbol in quantity field\r\n  const selectedUnit = units.find((u) => String(u._id) === String(formData.unit));\r\n  const unitSymbol = selectedUnit ? selectedUnit.symbol : \"\";\r\n\r\n  return (\r\n    <div className=\"im-wrapper\">\r\n      <div className=\"im-container\">\r\n        {/* Header Row: Title + Add Button */}\r\n        <div className=\"im-header\">\r\n          <h2 className=\"im-heading\">Inventory Master</h2>\r\n          <button className=\"im-add-btn\" onClick={handleAddNew}>\r\n            + Add Product\r\n          </button>\r\n        </div>\r\n\r\n        {/* Scrollable table container */}\r\n        <div className=\"im-table-container\">\r\n          <table className=\"im-table\">\r\n            <thead>\r\n              <tr>\r\n                {/* Removed Code column */}\r\n                <th>Name</th>\r\n                <th>Under</th>\r\n                <th>Unit</th>\r\n                <th>Size</th>\r\n                <th>Color</th>\r\n                <th>Quantity</th>\r\n                <th>Rate</th>\r\n                <th>Value</th>\r\n                <th>Photo</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {inventory.map((item) => (\r\n                <tr key={item._id}>\r\n                  {/* Removed display of code */}\r\n                  <td>{item.name}</td>\r\n                  <td>{item.category?.productName || \"—\"}</td>\r\n                  <td>{item.unit?.symbol || \"—\"}</td>\r\n                  <td>{item.size}</td>\r\n                  <td>{item.color}</td>\r\n                  <td>{item.quantity}</td>\r\n                  <td>{item.rate}</td>\r\n                  <td>{item.value}</td>\r\n                  <td>\r\n                    {item.photo && (\r\n                      <img\r\n                        src={`http://localhost:5000/api/inventory/photo/${item.photo}`}\r\n                        alt=\"item\"\r\n                        style={{ width: \"40px\", height: \"40px\", objectFit: \"cover\" }}\r\n                      />\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <button className=\"im-edit-btn\" onClick={() => handleEdit(item)}>\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      className=\"im-delete-btn\"\r\n                      onClick={() => handleDelete(item._id)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* Modal for Add/Edit */}\r\n        {showModal && (\r\n          <div className=\"im-overlay\">\r\n            <div className=\"im-modal\">\r\n              <button className=\"im-close-btn\" onClick={() => setShowModal(false)}>\r\n                &times;\r\n              </button>\r\n              <h3>{formData._id ? \"Edit Product\" : \"Add Product\"}</h3>\r\n\r\n              <form onSubmit={handleSubmit} className=\"im-form-grid\">\r\n                {/* Removed Code input */}\r\n                {/* Row 1: Name */}\r\n                <div className=\"form-field\">\r\n                  <label>Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={formData.name}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                {/* Row 2: Under + Unit */}\r\n                <div className=\"form-field\">\r\n                  <label>Under:</label>\r\n                  <select\r\n                    name=\"category\"\r\n                    value={formData.category}\r\n                    onChange={handleChange}\r\n                    required\r\n                  >\r\n                    <option value=\"\">-- Select Category --</option>\r\n                    {categories.map((cat) => (\r\n                      <option key={cat._id} value={cat._id}>\r\n                        {cat.productName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-field\">\r\n                  <label>Unit:</label>\r\n                  <select\r\n                    name=\"unit\"\r\n                    value={formData.unit}\r\n                    onChange={handleChange}\r\n                    required\r\n                  >\r\n                    <option value=\"\">-- Select Unit --</option>\r\n                    {units.map((u) => (\r\n                      <option key={u._id} value={u._id}>\r\n                        {u.symbol}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n\r\n                {/* Row 3: Size + Color */}\r\n                <div className=\"form-field\">\r\n                  <label>Size:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"size\"\r\n                    value={formData.size}\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-field\">\r\n                  <label>Color:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"color\"\r\n                    value={formData.color}\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n\r\n                {/* Row 4: Quantity + Rate */}\r\n                <div className=\"form-field\">\r\n                  <label>Quantity:</label>\r\n                  <div className=\"quantity-input-group\">\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      step=\"any\"\r\n                      name=\"quantity\"\r\n                      value={formData.quantity}\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                    <span className=\"quantity-unit\">{unitSymbol}</span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-field\">\r\n                  <label>Rate/item:</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    step=\"any\"\r\n                    name=\"rate\"\r\n                    value={formData.rate}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                {/* Row 5: Value + Photo */}\r\n                <div className=\"form-field\">\r\n                  <label>Value:</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    step=\"any\"\r\n                    name=\"value\"\r\n                    value={formData.value}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                {/* Photo spanning both columns */}\r\n                <div className=\"form-field full-span\">\r\n                  <label>Photo:</label>\r\n                  <div className=\"photo-row\">\r\n                    {formData.existingPhoto && (\r\n                      <img\r\n                        src={formData.existingPhoto}\r\n                        alt=\"existing\"\r\n                        style={{ width: \"50px\", height: \"50px\", objectFit: \"cover\" }}\r\n                      />\r\n                    )}\r\n                    <input type=\"file\" name=\"photo\" onChange={handleChange} />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Final row: Save button */}\r\n                <div className=\"form-field full-span\" style={{ textAlign: \"center\" }}>\r\n                  <button type=\"submit\" className=\"im-save-btn\">\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventoryMaster;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}