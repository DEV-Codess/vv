{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/auth'; // No need for http://localhost:5000 because of proxy\n\n// Register User\nexport const register = async userData => {\n  try {\n    const response = await axios.post(\"\".concat(API_URL, \"/register\"), userData);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed';\n  }\n};\n\n// Login User\nexport const login = async userData => {\n  try {\n    const response = await axios.post(\"\".concat(API_URL, \"/login\"), userData);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed';\n  }\n};","map":{"version":3,"names":["axios","API_URL","register","userData","response","post","concat","data","error","_error$response","_error$response$data","message","login","_error$response2","_error$response2$data"],"sources":["D:/vv/client/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = '/api/auth'; // No need for http://localhost:5000 because of proxy\r\n\r\n// Register User\r\nexport const register = async (userData) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/register`, userData);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data?.message || 'Registration failed';\r\n    }\r\n};\r\n\r\n// Login User\r\nexport const login = async (userData) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/login`, userData);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data?.message || 'Login failed';\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,WAAW,CAAC,CAAC;;AAE7B;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACxC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,IAAAC,MAAA,CAAIL,OAAO,gBAAaE,QAAQ,CAAC;IAClE,OAAOC,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACZ,MAAM,EAAAD,eAAA,GAAAD,KAAK,CAACJ,QAAQ,cAAAK,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAI,qBAAqB;EAChE;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,KAAK,GAAG,MAAOT,QAAQ,IAAK;EACrC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,IAAAC,MAAA,CAAIL,OAAO,aAAUE,QAAQ,CAAC;IAC/D,OAAOC,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAK,gBAAA,EAAAC,qBAAA;IACZ,MAAM,EAAAD,gBAAA,GAAAL,KAAK,CAACJ,QAAQ,cAAAS,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBN,IAAI,cAAAO,qBAAA,uBAApBA,qBAAA,CAAsBH,OAAO,KAAI,cAAc;EACzD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}